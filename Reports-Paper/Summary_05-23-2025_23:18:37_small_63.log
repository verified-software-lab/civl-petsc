============================================================================================================================
                                               Verifying civl-petsc targets                                               
============================================================================================================================
========================================== Verifying [1/63] VecTDot ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecTDot=VecTDot_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_driver.cvl VecTDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecTDot_driver: nprocs = 1, N = 3 ... ok 
VecTDot_driver: nprocs = 1, N = 2 ... ok 
VecTDot_driver: nprocs = 1, N = 1 ... ok 
VecTDot_driver: nprocs = 2, N = 3 ... ok 
VecTDot_driver: nprocs = 2, N = 2 ... ok 
VecTDot_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecTDot_driver.cvl  (VecTDot_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecTDot.c  (VecTDot.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecTDot=VecTDot_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_driver.cvl VecTDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.26           transitions  : 25384 
   memory (bytes)    : 3.875536896E9  trace steps  : 14895 
   max process count : 3              valid calls  : 158936
   states            : 14896          provers      : z3    
   states saved      : 22169          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecTDot=VecTDot_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_driver.cvl VecTDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecTDot_driver: nprocs = 1, N = 3 ... ok 
VecTDot_driver: nprocs = 1, N = 2 ... ok 
VecTDot_driver: nprocs = 1, N = 1 ... ok 
VecTDot_driver: nprocs = 2, N = 3 ... ok 
VecTDot_driver: nprocs = 2, N = 2 ... ok 
VecTDot_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecTDot_driver.cvl  (VecTDot_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecTDot.c  (VecTDot.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecTDot=VecTDot_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_driver.cvl VecTDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 6.19           transitions  : 32214 
   memory (bytes)    : 3.724541952E9  trace steps  : 18801 
   max process count : 3              valid calls  : 200243
   states            : 18802          provers      : z3    
   states saved      : 28195          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecTDot: PASS (took 11s)

========================================== Verifying [2/63] VecAYPX_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecAYPX_Seq=VecAYPX_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAYPX_Seq_driver.cvl VecAYPX_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAYPX_Seq_driver: nprocs = 1, N = 3, Beta = X_beta_Real ... ok  ok  ok  ok 
VecAYPX_Seq_driver: nprocs = 1, N = 2, Beta = X_beta_Real ... ok  ok  ok  ok 
VecAYPX_Seq_driver: nprocs = 1, N = 1, Beta = X_beta_Real ... ok  ok  ok  ok 
VecAYPX_Seq_driver: nprocs = 2, N = 3, Beta = X_beta_Real ... ok  ok  ok  ok 
VecAYPX_Seq_driver: nprocs = 2, N = 2, Beta = X_beta_Real ... ok  ok  ok  ok 
VecAYPX_Seq_driver: nprocs = 2, N = 1, Beta = X_beta_Real ... ok  ok  ok  ok 
=== Source files ===
VecAYPX_Seq_driver.cvl  (VecAYPX_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAYPX_Seq.c  (VecAYPX_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAYPX_Seq=VecAYPX_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAYPX_Seq_driver.cvl VecAYPX_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 7.45           transitions  : 45891 
   memory (bytes)    : 4.009754624E9  trace steps  : 27308 
   max process count : 3              valid calls  : 289104
   states            : 27309          provers      : z3    
   states saved      : 41223          prover calls : 19    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecAYPX_Seq=VecAYPX_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAYPX_Seq_driver.cvl VecAYPX_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAYPX_Seq_driver: nprocs = 1, N = 3, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
VecAYPX_Seq_driver: nprocs = 1, N = 2, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
VecAYPX_Seq_driver: nprocs = 1, N = 1, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
VecAYPX_Seq_driver: nprocs = 2, N = 3, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
VecAYPX_Seq_driver: nprocs = 2, N = 2, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
VecAYPX_Seq_driver: nprocs = 2, N = 1, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
=== Source files ===
VecAYPX_Seq_driver.cvl  (VecAYPX_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAYPX_Seq.c  (VecAYPX_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAYPX_Seq=VecAYPX_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAYPX_Seq_driver.cvl VecAYPX_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 10.29         transitions  : 65539 
   memory (bytes)    : 3.85875968E9  trace steps  : 38777 
   max process count : 3             valid calls  : 416237
   states            : 38778         provers      : z3    
   states saved      : 58914         prover calls : 34    
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecAYPX_Seq: PASS (took 18s)

========================================== Verifying [3/63] VecMin_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMin_Seq=VecMin_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMin_Seq_driver.cvl VecMin_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMin_Seq_driver: nprocs = 1, N = 3 ... ok  ok  ok  ok 
VecMin_Seq_driver: nprocs = 1, N = 2 ... ok  ok 
VecMin_Seq_driver: nprocs = 1, N = 1 ... ok 
VecMin_Seq_driver: nprocs = 2, N = 3 ... ok  ok 
VecMin_Seq_driver: nprocs = 2, N = 2 ... ok 
VecMin_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecMin_Seq_driver.cvl  (VecMin_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMin_Seq.c  (VecMin_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMin_Seq=VecMin_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMin_Seq_driver.cvl VecMin_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 3.67           transitions  : 10927
   memory (bytes)    : 3.036676096E9  trace steps  : 5970 
   max process count : 3              valid calls  : 58877
   states            : 5971           provers      : z3   
   states saved      : 8987           prover calls : 20   
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMin_Seq=VecMin_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMin_Seq_driver.cvl VecMin_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMin_Seq_driver: nprocs = 1, N = 3 ... ok  ok  ok  ok 
VecMin_Seq_driver: nprocs = 1, N = 2 ... ok  ok 
VecMin_Seq_driver: nprocs = 1, N = 1 ... ok 
VecMin_Seq_driver: nprocs = 2, N = 3 ... ok  ok 
VecMin_Seq_driver: nprocs = 2, N = 2 ... ok 
VecMin_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecMin_Seq_driver.cvl  (VecMin_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMin_Seq.c  (VecMin_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMin_Seq=VecMin_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMin_Seq_driver.cvl VecMin_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 3.87           transitions  : 11931
   memory (bytes)    : 3.808428032E9  trace steps  : 6535 
   max process count : 3              valid calls  : 62953
   states            : 6536           provers      : z3   
   states saved      : 9856           prover calls : 20   
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMin_Seq: PASS (took 7s)

========================================== Verifying [4/63] VecNormalize ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecNormalize=VecNormalize_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNormalize_driver.cvl VecNormalize.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNormalize_driver: nprocs = 1, N = 3 ... ok 
VecNormalize_driver: nprocs = 1, N = 2 ... ok 
VecNormalize_driver: nprocs = 1, N = 1 ... ok 
VecNormalize_driver: nprocs = 2, N = 3 ... ok 
VecNormalize_driver: nprocs = 2, N = 2 ... ok 
VecNormalize_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecNormalize_driver.cvl  (VecNormalize_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNormalize.c  (VecNormalize.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNormalize=VecNormalize_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNormalize_driver.cvl VecNormalize.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.05           transitions  : 22460 
   memory (bytes)    : 3.758096384E9  trace steps  : 13014 
   max process count : 3              valid calls  : 137674
   states            : 13015          provers      : z3    
   states saved      : 19469          prover calls : 20    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecNormalize=VecNormalize_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNormalize_driver.cvl VecNormalize.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNormalize_driver: nprocs = 1, N = 3 ... ok 
VecNormalize_driver: nprocs = 1, N = 2 ... ok 
VecNormalize_driver: nprocs = 1, N = 1 ... ok 
VecNormalize_driver: nprocs = 2, N = 3 ... ok 
VecNormalize_driver: nprocs = 2, N = 2 ... ok 
VecNormalize_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecNormalize_driver.cvl  (VecNormalize_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNormalize.c  (VecNormalize.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNormalize=VecNormalize_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNormalize_driver.cvl VecNormalize.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 5.81           transitions  : 26435 
   memory (bytes)    : 3.825205248E9  trace steps  : 15172 
   max process count : 3              valid calls  : 160972
   states            : 15173          provers      : z3    
   states saved      : 22826          prover calls : 33    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecNormalize: PASS (took 12s)

========================================== Verifying [5/63] VecTDot_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecTDot_Seq=VecTDot_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_Seq_driver.cvl VecTDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecTDot_Seq_driver: nprocs = 1, N = 3 ... ok 
VecTDot_Seq_driver: nprocs = 1, N = 2 ... ok 
VecTDot_Seq_driver: nprocs = 1, N = 1 ... ok 
VecTDot_Seq_driver: nprocs = 2, N = 3 ... ok 
VecTDot_Seq_driver: nprocs = 2, N = 2 ... ok 
VecTDot_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecTDot_Seq_driver.cvl  (VecTDot_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecTDot_Seq.c  (VecTDot_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecTDot_Seq=VecTDot_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_Seq_driver.cvl VecTDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 4.37           transitions  : 16990 
   memory (bytes)    : 3.623878656E9  trace steps  : 9903  
   max process count : 3              valid calls  : 103525
   states            : 9904           provers      : z3    
   states saved      : 14623          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecTDot_Seq=VecTDot_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_Seq_driver.cvl VecTDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecTDot_Seq_driver: nprocs = 1, N = 3 ... ok 
VecTDot_Seq_driver: nprocs = 1, N = 2 ... ok 
VecTDot_Seq_driver: nprocs = 1, N = 1 ... ok 
VecTDot_Seq_driver: nprocs = 2, N = 3 ... ok 
VecTDot_Seq_driver: nprocs = 2, N = 2 ... ok 
VecTDot_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecTDot_Seq_driver.cvl  (VecTDot_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecTDot_Seq.c  (VecTDot_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecTDot_Seq=VecTDot_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_Seq_driver.cvl VecTDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 4.61           transitions  : 18990 
   memory (bytes)    : 3.657433088E9  trace steps  : 10907 
   max process count : 3              valid calls  : 112710
   states            : 10908          provers      : z3    
   states saved      : 16211          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecTDot_Seq: PASS (took 9s)

========================================== Verifying [6/63] VecMTDot ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot=VecMTDot_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_driver.cvl VecMTDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMTDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMTDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMTDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMTDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMTDot_driver.cvl  (VecMTDot_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMTDot.c  (VecMTDot.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot=VecMTDot_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_driver.cvl VecMTDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 15.3         transitions  : 125985
   memory (bytes)    : 3.7748736E9  trace steps  : 75386 
   max process count : 3            valid calls  : 809714
   states            : 75387        provers      : z3    
   states saved      : 112220       prover calls : 22    
   state matches     : 0            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot=VecMTDot_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_driver.cvl VecMTDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMTDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMTDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMTDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 2 ...18s: mem=3600Mb trans=138951 traceSteps=82614 explored=82615 saved=123630 prove=22
 ok 
VecMTDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMTDot_driver.cvl  (VecMTDot_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMTDot.c  (VecMTDot.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot=VecMTDot_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_driver.cvl VecMTDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 19.31        transitions  : 157491 
   memory (bytes)    : 3.7748736E9  trace steps  : 93364  
   max process count : 3            valid calls  : 1002864
   states            : 93365        provers      : z3     
   states saved      : 140031       prover calls : 22     
   state matches     : 0            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMTDot: PASS (took 35s)

========================================== Verifying [7/63] VecGetSize_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize_Seq=VecGetSize_Seq_spec -input_mpi_nprocs=1 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_Seq_driver.cvl VecGetSize_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecGetSize_Seq_driver: nproc = 1, N = X_N ... ok  ok  ok 
=== Source files ===
VecGetSize_Seq_driver.cvl  (VecGetSize_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecGetSize_Seq.c  (VecGetSize_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize_Seq=VecGetSize_Seq_spec -input_mpi_nprocs=1 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_Seq_driver.cvl VecGetSize_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 2.77          transitions  : 2294 
   memory (bytes)    : 3.52321536E9  trace steps  : 1262 
   max process count : 2             valid calls  : 10158
   states            : 1263          provers      : z3   
   states saved      : 1817          prover calls : 10   
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize_Seq=VecGetSize_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs=1 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_Seq_driver.cvl VecGetSize_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecGetSize_Seq_driver: nproc = 1, N = X_N ... ok  ok  ok 
=== Source files ===
VecGetSize_Seq_driver.cvl  (VecGetSize_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecGetSize_Seq.c  (VecGetSize_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize_Seq=VecGetSize_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs=1 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_Seq_driver.cvl VecGetSize_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 2.84           transitions  : 2310 
   memory (bytes)    : 3.154116608E9  trace steps  : 1268 
   max process count : 2              valid calls  : 10236
   states            : 1269           provers      : z3   
   states saved      : 1827           prover calls : 10   
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecGetSize_Seq: PASS (took 6s)

========================================== Verifying [8/63] VecAXPBYPCZ ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBYPCZ=VecAXPBYPCZ_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBYPCZ_driver.cvl VecAXPBYPCZ.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPBYPCZ_driver: nprocs = 1, N = 3, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok 
VecAXPBYPCZ_driver: nprocs = 1, N = 2, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok 
VecAXPBYPCZ_driver: nprocs = 1, N = 1, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok 
VecAXPBYPCZ_driver: nprocs = 2, N = 3, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok 
VecAXPBYPCZ_driver: nprocs = 2, N = 2, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok 
VecAXPBYPCZ_driver: nprocs = 2, N = 1, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok 
=== Source files ===
VecAXPBYPCZ_driver.cvl  (VecAXPBYPCZ_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPBYPCZ.c  (VecAXPBYPCZ.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBYPCZ=VecAXPBYPCZ_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBYPCZ_driver.cvl VecAXPBYPCZ.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 7.68           transitions  : 45410 
   memory (bytes)    : 3.724541952E9  trace steps  : 27136 
   max process count : 3              valid calls  : 288543
   states            : 27137          provers      : z3    
   states saved      : 40500          prover calls : 16    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBYPCZ=VecAXPBYPCZ_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBYPCZ_driver.cvl VecAXPBYPCZ.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPBYPCZ_driver: nprocs = 1, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok 
VecAXPBYPCZ_driver: nprocs = 1, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok 
VecAXPBYPCZ_driver: nprocs = 1, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok 
VecAXPBYPCZ_driver: nprocs = 2, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok 
VecAXPBYPCZ_driver: nprocs = 2, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok 
VecAXPBYPCZ_driver: nprocs = 2, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok 
=== Source files ===
VecAXPBYPCZ_driver.cvl  (VecAXPBYPCZ_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPBYPCZ.c  (VecAXPBYPCZ.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBYPCZ=VecAXPBYPCZ_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBYPCZ_driver.cvl VecAXPBYPCZ.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 8.88           transitions  : 53100 
   memory (bytes)    : 3.741319168E9  trace steps  : 31401 
   max process count : 3              valid calls  : 334787
   states            : 31402          provers      : z3    
   states saved      : 47089          prover calls : 20    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecAXPBYPCZ: PASS (took 17s)

========================================== Verifying [9/63] VecMTDot_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot_Seq=VecMTDot_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_Seq_driver.cvl VecMTDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMTDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMTDot_Seq_driver.cvl  (VecMTDot_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMTDot_Seq.c  (VecMTDot_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot_Seq=VecMTDot_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_Seq_driver.cvl VecMTDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 10.82          transitions  : 82304 
   memory (bytes)    : 3.456106496E9  trace steps  : 49233 
   max process count : 3              valid calls  : 519607
   states            : 49234          provers      : z3    
   states saved      : 72409          prover calls : 51    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot_Seq=VecMTDot_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_Seq_driver.cvl VecMTDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMTDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMTDot_Seq_driver.cvl  (VecMTDot_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMTDot_Seq.c  (VecMTDot_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot_Seq=VecMTDot_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_Seq_driver.cvl VecMTDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 12.36          transitions  : 92829 
   memory (bytes)    : 3.254779904E9  trace steps  : 54349 
   max process count : 3              valid calls  : 569715
   states            : 54350          provers      : z3    
   states saved      : 80614          prover calls : 51    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMTDot_Seq: PASS (took 23s)

========================================== Verifying [10/63] VecPointwiseMin ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMin=VecPointwiseMin_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMin_driver.cvl VecPointwiseMin.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMin_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMin_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMin_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMin_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMin_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMin_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMin_driver.cvl  (VecPointwiseMin_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMin.c  (VecPointwiseMin.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMin=VecPointwiseMin_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMin_driver.cvl VecPointwiseMin.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.45           transitions  : 35219 
   memory (bytes)    : 3.674210304E9  trace steps  : 21283 
   max process count : 3              valid calls  : 229627
   states            : 21284          provers      : z3    
   states saved      : 31357          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMin=VecPointwiseMin_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMin_driver.cvl VecPointwiseMin.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMin_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMin_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMin_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMin_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMin_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMin_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMin_driver.cvl  (VecPointwiseMin_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMin.c  (VecPointwiseMin.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMin=VecPointwiseMin_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMin_driver.cvl VecPointwiseMin.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.43           transitions  : 40907 
   memory (bytes)    : 3.623878656E9  trace steps  : 24421 
   max process count : 3              valid calls  : 263611
   states            : 24422          provers      : z3    
   states saved      : 36204          prover calls : 24    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecPointwiseMin: PASS (took 14s)

========================================== Verifying [11/63] VecMaxPointwiseDivide_orig ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide=VecMaxPointwiseDivide_spec -DVecMaxPointwiseDivide_BUGGY -DDEBUG -input_mpi_nprocs=2 -inputN_MIN=2 -inputN_MAX=3 VecMaxPointwiseDivide_driver.cvl VecMaxPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMaxPointwiseDivide_MPI_driver: nproc=2, N = 3 ...
x: { X_X_Real[0], X_X_Real[1], X_X_Real[2] }

y: { X_Y_Real[0], X_Y_Real[1], X_Y_Real[2] }
DEBUG: Spec VecMaxPointwiseDivide called
DEBUG: Spec VecMaxPointwiseDivide_MPI called
DEBUG: Spec VecMaxPointwiseDivide_Seq called
DEBUG: Spec VecMaxPointwiseDivide called
DEBUG: Spec VecMaxPointwiseDivide_MPI called
DEBUG: Spec VecMaxPointwiseDivide_Seq called
DEBUG: Target VecMaxPointwiseDivide
DEBUG: Spec VecMaxPointwiseDivide_Seq called
path condition: (0==X_Y_Real[1])&&(0==X_Y_Real[2])&&(0==X_Y_Real[0])&&(forall _t : dynamicType . (0 <= CIVL_SIZEOF(_t) - 1))&&(0<=(SIZEOF_INT-1))&&(0<=(SIZEOF_REAL-1))&&(0<=(X__mpi_nprocs_hi-2))&&((0==(AF_FABS(X_X_Real[1]) - 1*X_X_Real[1]))||(X_X_Real[1]<0))&&((0==(AF_FABS(X_X_Real[1]) + X_X_Real[1]))||(0<=X_X_Real[1]))&&((0==(AF_FABS(X_X_Real[2]) - 1*X_X_Real[2]))||(X_X_Real[2]<0))&&((0==(AF_FABS(X_X_Real[2]) + X_X_Real[2]))||(0<=X_X_Real[2]))&&((0==(AF_FABS(X_X_Real[0]) - 1*X_X_Real[0]))||(X_X_Real[0]<0))&&((0==(AF_FABS(X_X_Real[0]) + X_X_Real[0]))||(0<=X_X_Real[0]))

Actual   = ((AF_FABS(X_X_Real[1])+(-1*((AF_FABS(X_X_Real[0])<0) ? 0 : AF_FABS(X_X_Real[0]))))<0) ? ((AF_FABS(X_X_Real[0])<0) ? 0 : AF_FABS(X_X_Real[0])) : AF_FABS(X_X_Real[1])

Expected = (((((AF_FABS(X_X_Real[1])+(-1*((AF_FABS(X_X_Real[0])<0) ? 0 : AF_FABS(X_X_Real[0]))))<0) ? ((AF_FABS(X_X_Real[0])<0) ? 0 : AF_FABS(X_X_Real[0])) : AF_FABS(X_X_Real[1]))+(-1*((AF_FABS(X_X_Real[2])<0) ? 0 : AF_FABS(X_X_Real[2]))))<0) ? ((AF_FABS(X_X_Real[2])<0) ? 0 : AF_FABS(X_X_Real[2])) : (((AF_FABS(X_X_Real[1])+(-1*((AF_FABS(X_X_Real[0])<0) ? 0 : AF_FABS(X_X_Real[0]))))<0) ? ((AF_FABS(X_X_Real[0])<0) ? 0 : AF_FABS(X_X_Real[0])) : AF_FABS(X_X_Real[1]))

Violation 0 encountered at depth 2527:
[31mCIVL execution violation in p1 (property: ASSERTION_VIOLATION, certainty: PROVEABLE)[0m at
[34m$assert(max_actual == max_expected)[0m
[1mVecMaxPointwiseDivide_driver.cvl:50:4-38[0m | [34m$assert(max_actual == max_expected)[0m

Assertion: (max_actual==max_expected)
 -> (((AF_FABS(X_X_Real[1])+(-1*((AF_FABS(X_X_Real[0])<0) ? 0 : AF_FABS(X_X_Real[0]))))<0) ? ((AF_FABS(X_X_Real[0])<0) ? 0 : AF_FABS(X_X_Real[0])) : AF_FABS(X_X_Real[1]))==max_expected
 -> 0==(((AF_FABS(X_X_Real[1]) - 1*(((AF_FABS(X_X_Real[0]) < 0) ? 0 : AF_FABS(X_X_Real[0]))) < 0) ? (((AF_FABS(X_X_Real[0]) < 0) ? 0 : AF_FABS(X_X_Real[0]))) : AF_FABS(X_X_Real[1])) - 1*(((((AF_FABS(X_X_Real[1]) - 1*(((AF_FABS(X_X_Real[0]) < 0) ? 0 : AF_FABS(X_X_Real[0]))) < 0) ? (((AF_FABS(X_X_Real[0]) < 0) ? 0 : AF_FABS(X_X_Real[0]))) : AF_FABS(X_X_Real[1])) - 1*(((AF_FABS(X_X_Real[2]) < 0) ? 0 : AF_FABS(X_X_Real[2]))) < 0) ? (((AF_FABS(X_X_Real[2]) < 0) ? 0 : AF_FABS(X_X_Real[2]))) : (((AF_FABS(X_X_Real[1]) - 1*(((AF_FABS(X_X_Real[0]) < 0) ? 0 : AF_FABS(X_X_Real[0]))) < 0) ? (((AF_FABS(X_X_Real[0]) < 0) ? 0 : AF_FABS(X_X_Real[0]))) : AF_FABS(X_X_Real[1]))))))

Input:
  N_MIN=2
  N_MAX=3
  N=3
  X_Real=X_X_Real
  Y_Real=X_Y_Real
  _mpi_nprocs=2
  _mpi_nprocs_lo=1
  _mpi_nprocs_hi=X__mpi_nprocs_hi
Context:
  0==X_Y_Real[1]
  0==X_Y_Real[2]
  0==X_Y_Real[0]
  forall _t : dynamicType . (0 <= CIVL_SIZEOF(_t) - 1)
  0<=(SIZEOF_INT-1)
  0<=(SIZEOF_REAL-1)
  0<=(X__mpi_nprocs_hi-2)
  (0==(AF_FABS(X_X_Real[1]) - 1*X_X_Real[1]))||(X_X_Real[1]<0)
  (0==(AF_FABS(X_X_Real[1]) + X_X_Real[1]))||(0<=X_X_Real[1])
  (0==(AF_FABS(X_X_Real[2]) - 1*X_X_Real[2]))||(X_X_Real[2]<0)
  (0==(AF_FABS(X_X_Real[2]) + X_X_Real[2]))||(0<=X_X_Real[2])
  (0==(AF_FABS(X_X_Real[0]) - 1*X_X_Real[0]))||(X_X_Real[0]<0)
  (0==(AF_FABS(X_X_Real[0]) + X_X_Real[0]))||(0<=X_X_Real[0])
Call stacks:
process 0:
  main@23 
process 1:
  _civl_main@1219 [1mVecMaxPointwiseDivide_driver.cvl:50:4[0m [34m$assert[0m called from
  _mpi_process@227  called from
  _par_proc0@1532 
process 2:
  $mpi_collective_send@1324 [1mcivl-mpi-blocking.cvl:322:2[0m [34mreturn[0m called from
  $mpi_reduce@1357 [1mcivl-mpi-blocking.cvl:373:4[0m [34m$mpi_collective_send[0m called from
  MPI_Allreduce@308 [1mmpi.cvl:326:2[0m [34m$mpi_reduce[0m called from
  VecMaxPointwiseDivide_MPI@829 [1mpetscvec.cvl:1114:2[0m [34mMPI_Allreduce[0m called from
  VecMaxPointwiseDivide_spec@836 [1mpetscvec.cvl:1127:11[0m [34mVecMaxPointwiseDivide_MPI[0m called from
  _civl_main@1213 [1mVecMaxPointwiseDivide_driver.cvl:42:2[0m [34mVecMaxPointwiseDivide_spec[0m called from
  _mpi_process@227  called from
  _par_proc0@1532 

Logging new entry 0, writing trace to CIVLREP/VecMaxPointwiseDivide_driver_0.trace
Terminating search after finding 1 violation.

=== Source files ===
VecMaxPointwiseDivide_driver.cvl  (VecMaxPointwiseDivide_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMaxPointwiseDivide.c  (VecMaxPointwiseDivide.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide=VecMaxPointwiseDivide_spec -DVecMaxPointwiseDivide_BUGGY -DDEBUG -input_mpi_nprocs=2 -inputN_MIN=2 -inputN_MAX=3 VecMaxPointwiseDivide_driver.cvl VecMaxPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 4.13           transitions  : 4408 
   memory (bytes)    : 3.053453312E9  trace steps  : 2526 
   max process count : 3              valid calls  : 29731
   states            : 2527           provers      : z3   
   states saved      : 3759           prover calls : 16   
   state matches     : 0              

=== Result ===
The program MAY NOT be correct.  See CIVLREP/VecMaxPointwiseDivide_driver_log.txt
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide=VecMaxPointwiseDivide_spec -DVecMaxPointwiseDivide_BUGGY -DCIVL_COMPLEX -DUSE_COMPLEX -DDEBUG -input_mpi_nprocs=2 -inputN_MIN=2 -inputN_MAX=3 VecMaxPointwiseDivide_driver.cvl VecMaxPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMaxPointwiseDivide_MPI_driver: nproc=2, N = 3 ...
x: { X_X_Real[0]+(X_X_Imag[0])i, X_X_Real[1]+(X_X_Imag[1])i, X_X_Real[2]+(X_X_Imag[2])i }

y: { X_Y_Real[0]+(X_Y_Imag[0])i, X_Y_Real[1]+(X_Y_Imag[1])i, X_Y_Real[2]+(X_Y_Imag[2])i }
DEBUG: Spec VecMaxPointwiseDivide called
DEBUG: Spec VecMaxPointwiseDivide_MPI called
DEBUG: Spec VecMaxPointwiseDivide_Seq called
DEBUG: Spec VecMaxPointwiseDivide called
DEBUG: Spec VecMaxPointwiseDivide_MPI called
DEBUG: Spec VecMaxPointwiseDivide_Seq called
DEBUG: Target VecMaxPointwiseDivide
DEBUG: Spec VecMaxPointwiseDivide_Seq called
path condition: ((0==X_Y_Real[1]) ? (0==X_Y_Imag[1]) : false)&&((0==X_Y_Real[2]) ? (0==X_Y_Imag[2]) : false)&&((0==X_Y_Real[0]) ? (0==X_Y_Imag[0]) : false)&&(forall _t : dynamicType . (0 <= CIVL_SIZEOF(_t) - 1))&&(0<=(SIZEOF_INT-1))&&(0<=(SIZEOF_REAL-1))&&(0<=(X__mpi_nprocs_hi-2))

Actual   = ((((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2))+(-1*((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2))))<0) ? ((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2)) : ((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2))

Expected = (((((((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2))+(-1*((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2))))<0) ? ((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2)) : ((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2)))+(-1*((X_X_Imag[2]^2 + X_X_Real[2]^2)^(1/2))))<0) ? ((X_X_Imag[2]^2 + X_X_Real[2]^2)^(1/2)) : (((((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2))+(-1*((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2))))<0) ? ((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2)) : ((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2)))

Violation 0 encountered at depth 2886:
[31mCIVL execution violation in p1 (property: ASSERTION_VIOLATION, certainty: PROVEABLE)[0m at
[34m$assert(max_actual == max_expected)[0m
[1mVecMaxPointwiseDivide_driver.cvl:50:4-38[0m | [34m$assert(max_actual == max_expected)[0m

Assertion: (max_actual==max_expected)
 -> (((((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2))+(-1*((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2))))<0) ? ((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2)) : ((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2)))==max_expected
 -> 0==((((((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2) - 1*((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2)) < 0) ? ((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2)) : ((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2))) - 1*((X_X_Imag[2]^2 + X_X_Real[2]^2)^(1/2)) < 0) ? ((X_X_Imag[2]^2 + X_X_Real[2]^2)^(1/2)) : ((((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2) - 1*((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2)) < 0) ? ((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2)) : ((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2))))) - 1*((((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2) - 1*((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2)) < 0) ? ((X_X_Imag[0]^2 + X_X_Real[0]^2)^(1/2)) : ((X_X_Imag[1]^2 + X_X_Real[1]^2)^(1/2)))))

Input:
  N_MIN=2
  N_MAX=3
  N=3
  X_Real=X_X_Real
  Y_Real=X_Y_Real
  X_Imag=X_X_Imag
  Y_Imag=X_Y_Imag
  _mpi_nprocs=2
  _mpi_nprocs_lo=1
  _mpi_nprocs_hi=X__mpi_nprocs_hi
Context:
  (0==X_Y_Real[1]) ? (0==X_Y_Imag[1]) : false
  (0==X_Y_Real[2]) ? (0==X_Y_Imag[2]) : false
  (0==X_Y_Real[0]) ? (0==X_Y_Imag[0]) : false
  forall _t : dynamicType . (0 <= CIVL_SIZEOF(_t) - 1)
  0<=(SIZEOF_INT-1)
  0<=(SIZEOF_REAL-1)
  0<=(X__mpi_nprocs_hi-2)
Call stacks:
process 0:
  main@25 
process 1:
  _civl_main@1349 [1mVecMaxPointwiseDivide_driver.cvl:50:4[0m [34m$assert[0m called from
  _mpi_process@229  called from
  _par_proc0@1662 
process 2:
  $mpi_collective_send@1454 [1mcivl-mpi-blocking.cvl:322:2[0m [34mreturn[0m called from
  $mpi_reduce@1487 [1mcivl-mpi-blocking.cvl:373:4[0m [34m$mpi_collective_send[0m called from
  MPI_Allreduce@307 [1mmpi.cvl:326:2[0m [34m$mpi_reduce[0m called from
  VecMaxPointwiseDivide_MPI@905 [1mpetscvec.cvl:1114:2[0m [34mMPI_Allreduce[0m called from
  VecMaxPointwiseDivide_spec@912 [1mpetscvec.cvl:1127:11[0m [34mVecMaxPointwiseDivide_MPI[0m called from
  _civl_main@1343 [1mVecMaxPointwiseDivide_driver.cvl:42:2[0m [34mVecMaxPointwiseDivide_spec[0m called from
  _mpi_process@229  called from
  _par_proc0@1662 

Logging new entry 0, writing trace to CIVLREP/VecMaxPointwiseDivide_driver_0.trace
Terminating search after finding 1 violation.

=== Source files ===
VecMaxPointwiseDivide_driver.cvl  (VecMaxPointwiseDivide_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMaxPointwiseDivide.c  (VecMaxPointwiseDivide.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide=VecMaxPointwiseDivide_spec -DVecMaxPointwiseDivide_BUGGY -DCIVL_COMPLEX -DUSE_COMPLEX -DDEBUG -input_mpi_nprocs=2 -inputN_MIN=2 -inputN_MAX=3 VecMaxPointwiseDivide_driver.cvl VecMaxPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 3.66           transitions  : 5063 
   memory (bytes)    : 3.758096384E9  trace steps  : 2885 
   max process count : 3              valid calls  : 33779
   states            : 2886           provers      : z3   
   states saved      : 4317           prover calls : 19   
   state matches     : 0              

=== Result ===
The program MAY NOT be correct.  See CIVLREP/VecMaxPointwiseDivide_driver_log.txt

VecMaxPointwiseDivide_orig: FAIL (took 8s)

========================================== Verifying [12/63] VecDot_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecDot_Seq=VecDot_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_Seq_driver.cvl VecDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecDot_Seq_driver: nprocs =1, N =3 ... ok 
VecDot_Seq_driver: nprocs =1, N =2 ... ok 
VecDot_Seq_driver: nprocs =1, N =1 ... ok 
VecDot_Seq_driver: nprocs =2, N =3 ... ok 
VecDot_Seq_driver: nprocs =2, N =2 ... ok 
VecDot_Seq_driver: nprocs =2, N =1 ... ok 
=== Source files ===
VecDot_Seq_driver.cvl  (VecDot_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecDot_Seq.c  (VecDot_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecDot_Seq=VecDot_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_Seq_driver.cvl VecDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 4.27           transitions  : 17117 
   memory (bytes)    : 3.657433088E9  trace steps  : 9941  
   max process count : 3              valid calls  : 103683
   states            : 9942           provers      : z3    
   states saved      : 14697          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecDot_Seq=VecDot_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_Seq_driver.cvl VecDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecDot_Seq_driver: nprocs =1, N =3 ... ok 
VecDot_Seq_driver: nprocs =1, N =2 ... ok 
VecDot_Seq_driver: nprocs =1, N =1 ... ok 
VecDot_Seq_driver: nprocs =2, N =3 ... ok 
VecDot_Seq_driver: nprocs =2, N =2 ... ok 
VecDot_Seq_driver: nprocs =2, N =1 ... ok 
=== Source files ===
VecDot_Seq_driver.cvl  (VecDot_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecDot_Seq.c  (VecDot_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecDot_Seq=VecDot_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_Seq_driver.cvl VecDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 4.55         transitions  : 19275 
   memory (bytes)    : 3.7748736E9  trace steps  : 10969 
   max process count : 3            valid calls  : 112988
   states            : 10970        provers      : z3    
   states saved      : 16333        prover calls : 12    
   state matches     : 0            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecDot_Seq: PASS (took 10s)

========================================== Verifying [13/63] VecNorm ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm=VecNorm_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_driver.cvl VecNorm.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNorm_driver: nprocs = 1, N = 3, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 1, N = 3, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 1, N = 3, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 1, N = 3, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 1, N = 3, normType = NORM_1_AND_2 ... ok 
VecNorm_driver: nprocs = 1, N = 2, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 1, N = 2, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 1, N = 2, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 1, N = 2, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 1, N = 2, normType = NORM_1_AND_2 ... ok 
VecNorm_driver: nprocs = 1, N = 1, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 1, N = 1, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 1, N = 1, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 1, N = 1, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 1, N = 1, normType = NORM_1_AND_2 ... ok 
VecNorm_driver: nprocs = 2, N = 3, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 2, N = 3, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 2, N = 3, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 2, N = 3, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 2, N = 3, normType = NORM_1_AND_2 ... ok 
VecNorm_driver: nprocs = 2, N = 2, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 2, N = 2, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 2, N = 2, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 2, N = 2, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 2, N = 2, normType = NORM_1_AND_2 ... ok 
VecNorm_driver: nprocs = 2, N = 1, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 2, N = 1, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 2, N = 1, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 2, N = 1, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 2, N = 1, normType = NORM_1_AND_2 ... ok 
=== Source files ===
VecNorm_driver.cvl  (VecNorm_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNorm.c  (VecNorm.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm=VecNorm_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_driver.cvl VecNorm.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 7.99           transitions  : 66274 
   memory (bytes)    : 3.758096384E9  trace steps  : 38248 
   max process count : 3              valid calls  : 401279
   states            : 38225          provers      : z3    
   states saved      : 57076          prover calls : 16    
   state matches     : 24             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecNorm=VecNorm_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_driver.cvl VecNorm.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNorm_driver: nprocs = 1, N = 3, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 1, N = 3, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 1, N = 3, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 1, N = 3, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 1, N = 3, normType = NORM_1_AND_2 ... ok 
VecNorm_driver: nprocs = 1, N = 2, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 1, N = 2, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 1, N = 2, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 1, N = 2, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 1, N = 2, normType = NORM_1_AND_2 ... ok 
VecNorm_driver: nprocs = 1, N = 1, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 1, N = 1, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 1, N = 1, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 1, N = 1, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 1, N = 1, normType = NORM_1_AND_2 ... ok 
VecNorm_driver: nprocs = 2, N = 3, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 2, N = 3, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 2, N = 3, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 2, N = 3, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 2, N = 3, normType = NORM_1_AND_2 ... ok 
VecNorm_driver: nprocs = 2, N = 2, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 2, N = 2, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 2, N = 2, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 2, N = 2, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 2, N = 2, normType = NORM_1_AND_2 ... ok 
VecNorm_driver: nprocs = 2, N = 1, normType = NORM_1 ... ok 
VecNorm_driver: nprocs = 2, N = 1, normType = NORM_2 ... ok 
VecNorm_driver: nprocs = 2, N = 1, normType = NORM_FROBENIUS ... ok 
VecNorm_driver: nprocs = 2, N = 1, normType = NORM_INFINITY ... ok 
VecNorm_driver: nprocs = 2, N = 1, normType = NORM_1_AND_2 ... ok 
=== Source files ===
VecNorm_driver.cvl  (VecNorm_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNorm.c  (VecNorm.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm=VecNorm_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_driver.cvl VecNorm.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 9.02           transitions  : 75913 
   memory (bytes)    : 2.969567232E9  trace steps  : 43754 
   max process count : 3              valid calls  : 459355
   states            : 43731          provers      : z3    
   states saved      : 65648          prover calls : 20    
   state matches     : 24             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecNorm: PASS (took 17s)

========================================== Verifying [14/63] VecAXPBY ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBY=VecAXPBY_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBY_driver.cvl VecAXPBY.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPBY_driver: nprocs = 1, N = 3, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok 
VecAXPBY_driver: nprocs = 1, N = 2, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok 
VecAXPBY_driver: nprocs = 1, N = 1, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok 
VecAXPBY_driver: nprocs = 2, N = 3, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok 
VecAXPBY_driver: nprocs = 2, N = 2, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok 
VecAXPBY_driver: nprocs = 2, N = 1, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok 
=== Source files ===
VecAXPBY_driver.cvl  (VecAXPBY_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPBY.c  (VecAXPBY.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBY=VecAXPBY_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBY_driver.cvl VecAXPBY.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.43           transitions  : 36288 
   memory (bytes)    : 3.925868544E9  trace steps  : 21475 
   max process count : 3              valid calls  : 228195
   states            : 21476          provers      : z3    
   states saved      : 32153          prover calls : 16    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBY=VecAXPBY_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBY_driver.cvl VecAXPBY.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPBY_driver: nprocs = 1, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
VecAXPBY_driver: nprocs = 1, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
VecAXPBY_driver: nprocs = 1, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
VecAXPBY_driver: nprocs = 2, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
VecAXPBY_driver: nprocs = 2, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
VecAXPBY_driver: nprocs = 2, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
=== Source files ===
VecAXPBY_driver.cvl  (VecAXPBY_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPBY.c  (VecAXPBY.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBY=VecAXPBY_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBY_driver.cvl VecAXPBY.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.41         transitions  : 42839 
   memory (bytes)    : 3.7748736E9  trace steps  : 25208 
   max process count : 3            valid calls  : 268684
   states            : 25209        provers      : z3    
   states saved      : 37919        prover calls : 20    
   state matches     : 0            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecAXPBY: PASS (took 14s)

========================================== Verifying [15/63] VecMDot ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMDot=VecMDot_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_driver.cvl VecMDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMDot_driver.cvl  (VecMDot_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMDot.c  (VecMDot.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMDot=VecMDot_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_driver.cvl VecMDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 15.21          transitions  : 126129
   memory (bytes)    : 3.254779904E9  trace steps  : 75362 
   max process count : 3              valid calls  : 809609
   states            : 75363          provers      : z3    
   states saved      : 112193         prover calls : 22    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMDot=VecMDot_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_driver.cvl VecMDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 2 ...18s: mem=3680Mb trans=139343 traceSteps=82314 explored=82315 saved=123252 prove=22
 ok 
VecMDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_driver: nproc=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMDot_driver.cvl  (VecMDot_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMDot.c  (VecMDot.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMDot=VecMDot_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_driver.cvl VecMDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 19.42         transitions  : 158643 
   memory (bytes)    : 3.85875968E9  trace steps  : 93484  
   max process count : 3             valid calls  : 1003479
   states            : 93485         provers      : z3     
   states saved      : 140292        prover calls : 22     
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMDot: PASS (took 35s)

========================================== Verifying [16/63] VecNormAvailable ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecNormAvailable=VecNormAvailable_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNormAvailable_driver.cvl VecNormAvailable.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNormAvailable_driver: nprocs = 1, N = 3, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 3, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 3, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 1, N = 3, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 1, N = 3, Type = NORM_1_AND_2 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 2, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 2, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 2, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 1, N = 2, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 1, N = 2, Type = NORM_1_AND_2 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 1, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 1, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 1, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 1, N = 1, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 1, N = 1, Type = NORM_1_AND_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 3, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 3, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 3, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 2, N = 3, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 2, N = 3, Type = NORM_1_AND_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 2, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 2, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 2, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 2, N = 2, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 2, N = 2, Type = NORM_1_AND_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 1, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 1, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 1, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 2, N = 1, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 2, N = 1, Type = NORM_1_AND_2 ... ok 
=== Source files ===
VecNormAvailable_driver.cvl  (VecNormAvailable_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNormAvailable.c  (VecNormAvailable.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNormAvailable=VecNormAvailable_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNormAvailable_driver.cvl VecNormAvailable.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 7.65           transitions  : 61161 
   memory (bytes)    : 3.657433088E9  trace steps  : 35766 
   max process count : 3              valid calls  : 372853
   states            : 35743          provers      : z3    
   states saved      : 53339          prover calls : 14    
   state matches     : 24             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecNormAvailable=VecNormAvailable_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNormAvailable_driver.cvl VecNormAvailable.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNormAvailable_driver: nprocs = 1, N = 3, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 3, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 3, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 1, N = 3, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 1, N = 3, Type = NORM_1_AND_2 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 2, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 2, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 2, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 1, N = 2, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 1, N = 2, Type = NORM_1_AND_2 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 1, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 1, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 1, N = 1, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 1, N = 1, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 1, N = 1, Type = NORM_1_AND_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 3, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 3, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 3, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 2, N = 3, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 2, N = 3, Type = NORM_1_AND_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 2, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 2, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 2, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 2, N = 2, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 2, N = 2, Type = NORM_1_AND_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 1, Type = NORM_1 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 1, Type = NORM_2 ... ok 
VecNormAvailable_driver: nprocs = 2, N = 1, Type = NORM_FROBENIUS ... ok 
VecNormAvailable_driver: nprocs = 2, N = 1, Type = NORM_INFINITY ... ok 
VecNormAvailable_driver: nprocs = 2, N = 1, Type = NORM_1_AND_2 ... ok 
=== Source files ===
VecNormAvailable_driver.cvl  (VecNormAvailable_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNormAvailable.c  (VecNormAvailable.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNormAvailable=VecNormAvailable_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNormAvailable_driver.cvl VecNormAvailable.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 8.68          transitions  : 70566 
   memory (bytes)    : 3.69098752E9  trace steps  : 41194 
   max process count : 3             valid calls  : 430506
   states            : 41171         provers      : z3    
   states saved      : 61740         prover calls : 20    
   state matches     : 24            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecNormAvailable: PASS (took 17s)

========================================== Verifying [17/63] VecNorm_MPI_orig ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_MPI=VecNorm_MPI_spec -DDEBUG -input_mpi_nprocs=2 -inputN_MIN=2 -inputN_MAX=3 VecNorm_MPI_driver.cvl VecNorm_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_1...
x = { X_A_Real[0], X_A_Real[1], X_A_Real[2] }

DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
Rank 0: Actual   = AF_FABS(X_A_Real[1])+AF_FABS(X_A_Real[2])+AF_FABS(X_A_Real[0])
Expected = AF_FABS(X_A_Real[1])+AF_FABS(X_A_Real[2])+AF_FABS(X_A_Real[0])
Rank 1: Actual   = AF_FABS(X_A_Real[1])+AF_FABS(X_A_Real[2])+AF_FABS(X_A_Real[0])
Expected = AF_FABS(X_A_Real[1])+AF_FABS(X_A_Real[2])+AF_FABS(X_A_Real[0])

VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_2...
x = { X_A_Real[0], X_A_Real[1], X_A_Real[2] }

DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
Rank 0: Actual   = (AF_FABS(X_A_Real[1])^2 + AF_FABS(X_A_Real[2])^2 + AF_FABS(X_A_Real[0])^2)^(1/2)
Expected = (AF_FABS(X_A_Real[1])^2 + AF_FABS(X_A_Real[2])^2 + AF_FABS(X_A_Real[0])^2)^(1/2)
Rank 1: Actual   = (AF_FABS(X_A_Real[1])^2 + AF_FABS(X_A_Real[2])^2 + AF_FABS(X_A_Real[0])^2)^(1/2)
Expected = (AF_FABS(X_A_Real[1])^2 + AF_FABS(X_A_Real[2])^2 + AF_FABS(X_A_Real[0])^2)^(1/2)

VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_FROBENIUS...
x = { X_A_Real[0], X_A_Real[1], X_A_Real[2] }

DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
Rank 0: Actual   = (AF_FABS(X_A_Real[2]) + (AF_FABS(X_A_Real[1])^2 + AF_FABS(X_A_Real[0])^2)^(1/2))^(1/2)
Expected = (AF_FABS(X_A_Real[1])^2 + AF_FABS(X_A_Real[2])^2 + AF_FABS(X_A_Real[0])^2)^(1/2)

Violation 0 encountered at depth 1625:
[31mCIVL execution violation in p1 (property: ASSERTION_VIOLATION, certainty: PROVEABLE)[0m at
[34m$assert(actual[0] == expected[0])[0m
[1mVecNorm_MPI_driver.cvl:45:2-34[0m | [34m$assert(actual[0] == expected[0])[0m

Assertion: ((actual)[0]==(expected)[0])
 -> ((AF_FABS(X_A_Real[2]) + (AF_FABS(X_A_Real[1])^2 + AF_FABS(X_A_Real[0])^2)^(1/2))^(1/2))==(expected)[0]
 -> 0==((AF_FABS(X_A_Real[1])^2 + AF_FABS(X_A_Real[2])^2 + AF_FABS(X_A_Real[0])^2)^(1/2) - 1*((AF_FABS(X_A_Real[2]) + (AF_FABS(X_A_Real[1])^2 + AF_FABS(X_A_Real[0])^2)^(1/2))^(1/2)))

Input:
  N_MIN=2
  N_MAX=3
  N=3
  A_Real=X_A_Real
  _mpi_nprocs=2
  _mpi_nprocs_lo=1
  _mpi_nprocs_hi=X__mpi_nprocs_hi
Context:
  forall _t : dynamicType . (0 <= CIVL_SIZEOF(_t) - 1)
  0<=(SIZEOF_INT-1)
  0<=(SIZEOF_REAL-1)
  0<=(X__mpi_nprocs_hi-2)
  (0==(AF_FABS(X_A_Real[1]) - 1*X_A_Real[1]))||(X_A_Real[1]<0)
  (0==(AF_FABS(X_A_Real[1]) + X_A_Real[1]))||(0<=X_A_Real[1])
  (0==(AF_FABS(X_A_Real[2]) - 1*X_A_Real[2]))||(X_A_Real[2]<0)
  (0==(AF_FABS(X_A_Real[2]) + X_A_Real[2]))||(0<=X_A_Real[2])
  (0==(AF_FABS(X_A_Real[0]) - 1*X_A_Real[0]))||(X_A_Real[0]<0)
  (0==(AF_FABS(X_A_Real[0]) + X_A_Real[0]))||(0<=X_A_Real[0])
Call stacks:
process 0:
  main@22 
process 1:
  _civl_main@1175 [1mVecNorm_MPI_driver.cvl:45:2[0m [34m$assert[0m called from
  _mpi_process@226  called from
  _par_proc0@1511 
process 2:
  $mpi_collective_send@1303 [1mcivl-mpi-blocking.cvl:322:2[0m [34mreturn[0m called from
  $mpi_reduce@1336 [1mcivl-mpi-blocking.cvl:373:4[0m [34m$mpi_collective_send[0m called from
  MPI_Allreduce@307 [1mmpi.cvl:326:2[0m [34m$mpi_reduce[0m called from
  VecNorm_MPI_Default@1196 [1mpetscvec.h:628:2[0m [34mMPI_Allreduce[0m called from
  VecNorm_MPI@1143 [1mVecNorm_MPI.c:47:12[0m [34mVecNorm_MPI_Default[0m called from
  _civl_main@1172 [1mVecNorm_MPI_driver.cvl:39:30[0m [34mVecNorm_MPI[0m called from
  _mpi_process@226  called from
  _par_proc0@1511 

Logging new entry 0, writing trace to CIVLREP/VecNorm_MPI_driver_0.trace
Terminating search after finding 1 violation.

=== Source files ===
VecNorm_MPI_driver.cvl  (VecNorm_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNorm_MPI.c  (VecNorm_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_MPI=VecNorm_MPI_spec -DDEBUG -input_mpi_nprocs=2 -inputN_MIN=2 -inputN_MAX=3 VecNorm_MPI_driver.cvl VecNorm_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 4.43           transitions  : 9244 
   memory (bytes)    : 3.724541952E9  trace steps  : 5044 
   max process count : 3              valid calls  : 57936
   states            : 5044           provers      : z3   
   states saved      : 7664           prover calls : 12   
   state matches     : 1              

=== Result ===
The program MAY NOT be correct.  See CIVLREP/VecNorm_MPI_driver_log.txt
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_MPI=VecNorm_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -DDEBUG -input_mpi_nprocs=2 -inputN_MIN=2 -inputN_MAX=3 VecNorm_MPI_driver.cvl VecNorm_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_1...
x = { X_A_Real[0]+(X_A_Imag[0])i, X_A_Real[1]+(X_A_Imag[1])i, X_A_Real[2]+(X_A_Imag[2])i }

DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
Rank 0: Actual   = ((X_A_Imag[1]^2 + X_A_Real[1]^2)^(1/2))+((X_A_Imag[2]^2 + X_A_Real[2]^2)^(1/2))+((X_A_Imag[0]^2 + X_A_Real[0]^2)^(1/2))
Expected = ((X_A_Imag[1]^2 + X_A_Real[1]^2)^(1/2))+((X_A_Imag[2]^2 + X_A_Real[2]^2)^(1/2))+((X_A_Imag[0]^2 + X_A_Real[0]^2)^(1/2))
Rank 1: Actual   = ((X_A_Imag[1]^2 + X_A_Real[1]^2)^(1/2))+((X_A_Imag[2]^2 + X_A_Real[2]^2)^(1/2))+((X_A_Imag[0]^2 + X_A_Real[0]^2)^(1/2))
Expected = ((X_A_Imag[1]^2 + X_A_Real[1]^2)^(1/2))+((X_A_Imag[2]^2 + X_A_Real[2]^2)^(1/2))+((X_A_Imag[0]^2 + X_A_Real[0]^2)^(1/2))

VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_2...
x = { X_A_Real[0]+(X_A_Imag[0])i, X_A_Real[1]+(X_A_Imag[1])i, X_A_Real[2]+(X_A_Imag[2])i }

DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
Rank 0: Actual   = (X_A_Imag[1]^2 + X_A_Imag[2]^2 + X_A_Imag[0]^2 + X_A_Real[1]^2 + X_A_Real[2]^2 + X_A_Real[0]^2)^(1/2)
Expected = (X_A_Imag[1]^2 + X_A_Imag[2]^2 + X_A_Imag[0]^2 + X_A_Real[1]^2 + X_A_Real[2]^2 + X_A_Real[0]^2)^(1/2)
Rank 1: Actual   = (X_A_Imag[1]^2 + X_A_Imag[2]^2 + X_A_Imag[0]^2 + X_A_Real[1]^2 + X_A_Real[2]^2 + X_A_Real[0]^2)^(1/2)
Expected = (X_A_Imag[1]^2 + X_A_Imag[2]^2 + X_A_Imag[0]^2 + X_A_Real[1]^2 + X_A_Real[2]^2 + X_A_Real[0]^2)^(1/2)

VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_FROBENIUS...
x = { X_A_Real[0]+(X_A_Imag[0])i, X_A_Real[1]+(X_A_Imag[1])i, X_A_Real[2]+(X_A_Imag[2])i }

DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
DEBUG: Target VecNorm_MPI
DEBUG: Spec VecNorm_Seq
Rank 0: Actual   = ((X_A_Imag[1]^2 + X_A_Imag[0]^2 + X_A_Real[1]^2 + X_A_Real[0]^2)^(1/2) + (X_A_Imag[2]^2 + X_A_Real[2]^2)^(1/2))^(1/2)
Expected = (X_A_Imag[1]^2 + X_A_Imag[2]^2 + X_A_Imag[0]^2 + X_A_Real[1]^2 + X_A_Real[2]^2 + X_A_Real[0]^2)^(1/2)

Violation 0 encountered at depth 1813:
[31mCIVL execution violation in p1 (property: ASSERTION_VIOLATION, certainty: MAYBE)[0m at
[34m$assert(actual[0] == expected[0])[0m
[1mVecNorm_MPI_driver.cvl:45:2-34[0m | [34m$assert(actual[0] == expected[0])[0m

Assertion: ((actual)[0]==(expected)[0])
 -> (((X_A_Imag[1]^2 + X_A_Imag[0]^2 + X_A_Real[1]^2 + X_A_Real[0]^2)^(1/2) + (X_A_Imag[2]^2 + X_A_Real[2]^2)^(1/2))^(1/2))==(expected)[0]
 -> 0==((X_A_Imag[1]^2 + X_A_Imag[2]^2 + X_A_Imag[0]^2 + X_A_Real[1]^2 + X_A_Real[2]^2 + X_A_Real[0]^2)^(1/2) - 1*(((X_A_Imag[1]^2 + X_A_Imag[0]^2 + X_A_Real[1]^2 + X_A_Real[0]^2)^(1/2) + (X_A_Imag[2]^2 + X_A_Real[2]^2)^(1/2))^(1/2)))

Input:
  N_MIN=2
  N_MAX=3
  N=3
  A_Real=X_A_Real
  A_Imag=X_A_Imag
  _mpi_nprocs=2
  _mpi_nprocs_lo=1
  _mpi_nprocs_hi=X__mpi_nprocs_hi
Context:
  forall _t : dynamicType . (0 <= CIVL_SIZEOF(_t) - 1)
  0<=(SIZEOF_INT-1)
  0<=(SIZEOF_REAL-1)
  0<=(X__mpi_nprocs_hi-2)
Call stacks:
process 0:
  main@23 
process 1:
  _civl_main@1299 [1mVecNorm_MPI_driver.cvl:45:2[0m [34m$assert[0m called from
  _mpi_process@227  called from
  _par_proc0@1635 
process 2:
  $mpi_collective_send@1427 [1mcivl-mpi-blocking.cvl:322:2[0m [34mreturn[0m called from
  $mpi_reduce@1460 [1mcivl-mpi-blocking.cvl:373:4[0m [34m$mpi_collective_send[0m called from
  MPI_Allreduce@305 [1mmpi.cvl:326:2[0m [34m$mpi_reduce[0m called from
  VecNorm_MPI_Default@1320 [1mpetscvec.h:628:2[0m [34mMPI_Allreduce[0m called from
  VecNorm_MPI@1262 [1mVecNorm_MPI.c:47:12[0m [34mVecNorm_MPI_Default[0m called from
  _civl_main@1296 [1mVecNorm_MPI_driver.cvl:39:30[0m [34mVecNorm_MPI[0m called from
  _mpi_process@227  called from
  _par_proc0@1635 

Logging new entry 0, writing trace to CIVLREP/VecNorm_MPI_driver_0.trace
Terminating search after finding 1 violation.

=== Source files ===
VecNorm_MPI_driver.cvl  (VecNorm_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNorm_MPI.c  (VecNorm_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_MPI=VecNorm_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX -DDEBUG -input_mpi_nprocs=2 -inputN_MIN=2 -inputN_MAX=3 VecNorm_MPI_driver.cvl VecNorm_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 4.54           transitions  : 10283
   memory (bytes)    : 3.204448256E9  trace steps  : 5602 
   max process count : 3              valid calls  : 63908
   states            : 5602           provers      : z3   
   states saved      : 8559           prover calls : 14   
   state matches     : 1              

=== Result ===
The program MAY NOT be correct.  See CIVLREP/VecNorm_MPI_driver_log.txt

VecNorm_MPI_orig: FAIL (took 9s)

========================================== Verifying [18/63] VecMTDot_MPI ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot_MPI=VecMTDot_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_MPI_driver.cvl VecMTDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMTDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMTDot_MPI_driver.cvl  (VecMTDot_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMTDot_MPI.c  (VecMTDot_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot_MPI=VecMTDot_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_MPI_driver.cvl VecMTDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 12.64          transitions  : 107536
   memory (bytes)    : 3.724541952E9  trace steps  : 63889 
   max process count : 3              valid calls  : 684861
   states            : 63890          provers      : z3    
   states saved      : 95156          prover calls : 21    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot_MPI=VecMTDot_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_MPI_driver.cvl VecMTDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMTDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMTDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMTDot_MPI_driver.cvl  (VecMTDot_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMTDot_MPI.c  (VecMTDot_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMTDot_MPI=VecMTDot_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMTDot_MPI_driver.cvl VecMTDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 16.02          transitions  : 135769
   memory (bytes)    : 3.674210304E9  trace steps  : 79389 
   max process count : 3              valid calls  : 852238
   states            : 79390          provers      : z3    
   states saved      : 119373         prover calls : 21    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMTDot_MPI: PASS (took 29s)

========================================== Verifying [19/63] VecMAXPY ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPY=VecMAXPY_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPY_driver.cvl VecMAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMAXPY_driver: nprocs = 1, N = 3, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 2, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 1, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 3, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 2, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 1, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 3, NV = 1 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 2, NV = 1 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 1, NV = 1 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 3, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 2, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 1, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 3, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 2, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 1, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 3, NV = 1 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 2, NV = 1 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 1, NV = 1 ... ok  ok 
=== Source files ===
VecMAXPY_driver.cvl  (VecMAXPY_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMAXPY.c  (VecMAXPY.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPY=VecMAXPY_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPY_driver.cvl VecMAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 16.81          transitions  : 136923
   memory (bytes)    : 3.707764736E9  trace steps  : 83196 
   max process count : 3              valid calls  : 894246
   states            : 83197          provers      : z3    
   states saved      : 123751         prover calls : 39    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPY=VecMAXPY_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPY_driver.cvl VecMAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMAXPY_driver: nprocs = 1, N = 3, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 2, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 1, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 3, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 2, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 1, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 3, NV = 1 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 2, NV = 1 ... ok  ok 
VecMAXPY_driver: nprocs = 1, N = 1, NV = 1 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 3, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 2, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 1, NV = 3 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 3, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 2, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 1, NV = 2 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 3, NV = 1 ... ok  ok 
VecMAXPY_driver: nprocs = 2, N = 2, NV = 1 ...18s: mem=3840Mb trans=138250 traceSteps=83090 explored=83091 saved=124104 prove=39
 ok  ok 
VecMAXPY_driver: nprocs = 2, N = 1, NV = 1 ... ok  ok 
=== Source files ===
VecMAXPY_driver.cvl  (VecMAXPY_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMAXPY.c  (VecMAXPY.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPY=VecMAXPY_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPY_driver.cvl VecMAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 19.83         transitions  : 159738 
   memory (bytes)    : 4.02653184E9  trace steps  : 95886  
   max process count : 3             valid calls  : 1032828
   states            : 95887         provers      : z3     
   states saved      : 143520        prover calls : 39     
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMAXPY: PASS (took 37s)

========================================== Verifying [20/63] VecScale_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecScale_Seq=VecScale_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecScale_Seq_driver.cvl VecScale_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecScale_Seq_driver: nproc = 1, N = 3, alpha = X_alpha_Real ... ok ok ok
VecScale_Seq_driver: nproc = 1, N = 2, alpha = X_alpha_Real ... ok ok ok
VecScale_Seq_driver: nproc = 1, N = 1, alpha = X_alpha_Real ... ok ok ok
VecScale_Seq_driver: nproc = 2, N = 3, alpha = X_alpha_Real ... ok ok ok
VecScale_Seq_driver: nproc = 2, N = 2, alpha = X_alpha_Real ... ok ok ok
VecScale_Seq_driver: nproc = 2, N = 1, alpha = X_alpha_Real ... ok ok ok
=== Source files ===
VecScale_Seq_driver.cvl  (VecScale_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecScale_Seq.c  (VecScale_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecScale_Seq=VecScale_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecScale_Seq_driver.cvl VecScale_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.76           transitions  : 41050 
   memory (bytes)    : 3.489660928E9  trace steps  : 24287 
   max process count : 3              valid calls  : 259588
   states            : 24288          provers      : z3    
   states saved      : 36495          prover calls : 17    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecScale_Seq=VecScale_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecScale_Seq_driver.cvl VecScale_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecScale_Seq_driver: nproc = 1, N = 3, alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok ok ok
VecScale_Seq_driver: nproc = 1, N = 2, alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok ok ok
VecScale_Seq_driver: nproc = 1, N = 1, alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok ok ok
VecScale_Seq_driver: nproc = 2, N = 3, alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok ok ok
VecScale_Seq_driver: nproc = 2, N = 2, alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok ok ok
VecScale_Seq_driver: nproc = 2, N = 1, alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok ok ok
=== Source files ===
VecScale_Seq_driver.cvl  (VecScale_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecScale_Seq.c  (VecScale_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecScale_Seq=VecScale_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecScale_Seq_driver.cvl VecScale_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 8.2            transitions  : 50726 
   memory (bytes)    : 3.674210304E9  trace steps  : 30003 
   max process count : 3              valid calls  : 324106
   states            : 30004          provers      : z3    
   states saved      : 45216          prover calls : 25    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecScale_Seq: PASS (took 15s)

========================================== Verifying [21/63] VecPointwiseMax ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMax=VecPointwiseMax_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMax_driver.cvl VecPointwiseMax.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMax_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMax_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMax_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMax_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMax_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMax_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMax_driver.cvl  (VecPointwiseMax_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMax.c  (VecPointwiseMax.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMax=VecPointwiseMax_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMax_driver.cvl VecPointwiseMax.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.35           transitions  : 35219 
   memory (bytes)    : 3.674210304E9  trace steps  : 21283 
   max process count : 3              valid calls  : 229627
   states            : 21284          provers      : z3    
   states saved      : 31357          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMax=VecPointwiseMax_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMax_driver.cvl VecPointwiseMax.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMax_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMax_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMax_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMax_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMax_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMax_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMax_driver.cvl  (VecPointwiseMax_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMax.c  (VecPointwiseMax.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMax=VecPointwiseMax_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMax_driver.cvl VecPointwiseMax.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.35           transitions  : 40907 
   memory (bytes)    : 3.758096384E9  trace steps  : 24421 
   max process count : 3              valid calls  : 263611
   states            : 24422          provers      : z3    
   states saved      : 36204          prover calls : 24    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecPointwiseMax: PASS (took 14s)

========================================== Verifying [22/63] VecGetValues ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecGetValues=VecGetValues_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetValues_driver.cvl VecGetValues.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecGetValues_driver: nprocs = 1, N = 3, ni =X_ni, B =X_B ... ok  ok  ok  ok 
VecGetValues_driver: nprocs = 1, N = 2, ni =X_ni, B =X_B ... ok  ok  ok 
VecGetValues_driver: nprocs = 1, N = 1, ni =X_ni, B =X_B ... ok  ok 
VecGetValues_driver: nprocs = 2, N = 3, ni =X_ni, B =X_B ... ok  ok  ok  ok  ok 
VecGetValues_driver: nprocs = 2, N = 2, ni =X_ni, B =X_B ... ok  ok  ok  ok 
VecGetValues_driver: nprocs = 2, N = 1, ni =X_ni, B =X_B ... ok  ok  ok 
=== Source files ===
VecGetValues_driver.cvl  (VecGetValues_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecGetValues.c  (VecGetValues.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecGetValues=VecGetValues_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetValues_driver.cvl VecGetValues.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.1            transitions  : 24498 
   memory (bytes)    : 3.724541952E9  trace steps  : 14960 
   max process count : 3              valid calls  : 155861
   states            : 14902          provers      : z3    
   states saved      : 21899          prover calls : 50    
   state matches     : 59             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecGetValues=VecGetValues_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetValues_driver.cvl VecGetValues.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecGetValues_driver: nprocs = 1, N = 3, ni =X_ni, B =X_B ... ok  ok  ok  ok 
VecGetValues_driver: nprocs = 1, N = 2, ni =X_ni, B =X_B ... ok  ok  ok 
VecGetValues_driver: nprocs = 1, N = 1, ni =X_ni, B =X_B ... ok  ok 
VecGetValues_driver: nprocs = 2, N = 3, ni =X_ni, B =X_B ... ok  ok  ok  ok  ok 
VecGetValues_driver: nprocs = 2, N = 2, ni =X_ni, B =X_B ... ok  ok  ok  ok 
VecGetValues_driver: nprocs = 2, N = 1, ni =X_ni, B =X_B ... ok  ok  ok 
=== Source files ===
VecGetValues_driver.cvl  (VecGetValues_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecGetValues.c  (VecGetValues.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecGetValues=VecGetValues_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetValues_driver.cvl VecGetValues.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 5.36           transitions  : 26962 
   memory (bytes)    : 3.825205248E9  trace steps  : 16351 
   max process count : 3              valid calls  : 167191
   states            : 16293          provers      : z3    
   states saved      : 24028          prover calls : 50    
   state matches     : 59             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecGetValues: PASS (took 11s)

========================================== Verifying [23/63] VecDot_MPI ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecDot_MPI=VecDot_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_MPI_driver.cvl VecDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecDot_MPI_driver: nprocs =1, N =3 ... ok 
VecDot_MPI_driver: nprocs =1, N =2 ... ok 
VecDot_MPI_driver: nprocs =1, N =1 ... ok 
VecDot_MPI_driver: nprocs =2, N =3 ... ok 
VecDot_MPI_driver: nprocs =2, N =2 ... ok 
VecDot_MPI_driver: nprocs =2, N =1 ... ok 
=== Source files ===
VecDot_MPI_driver.cvl  (VecDot_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecDot_MPI.c  (VecDot_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecDot_MPI=VecDot_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_MPI_driver.cvl VecDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 4.89           transitions  : 22578 
   memory (bytes)    : 3.758096384E9  trace steps  : 13073 
   max process count : 3              valid calls  : 139041
   states            : 13074          provers      : z3    
   states saved      : 19544          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecDot_MPI=VecDot_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_MPI_driver.cvl VecDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecDot_MPI_driver: nprocs =1, N =3 ... ok 
VecDot_MPI_driver: nprocs =1, N =2 ... ok 
VecDot_MPI_driver: nprocs =1, N =1 ... ok 
VecDot_MPI_driver: nprocs =2, N =3 ... ok 
VecDot_MPI_driver: nprocs =2, N =2 ... ok 
VecDot_MPI_driver: nprocs =2, N =1 ... ok 
=== Source files ===
VecDot_MPI_driver.cvl  (VecDot_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecDot_MPI.c  (VecDot_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecDot_MPI=VecDot_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_MPI_driver.cvl VecDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 5.59         transitions  : 27526 
   memory (bytes)    : 3.7748736E9  trace steps  : 15747 
   max process count : 3            valid calls  : 167910
   states            : 15748        provers      : z3    
   states saved      : 23672        prover calls : 12    
   state matches     : 0            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecDot_MPI: PASS (took 11s)

========================================== Verifying [24/63] VecAXPY ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPY=VecAXPY_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPY_driver.cvl VecAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPY_driver: nprocs = 1, N = 3, Alpha = X_alpha_Real ... ok  ok 
VecAXPY_driver: nprocs = 1, N = 2, Alpha = X_alpha_Real ... ok  ok 
VecAXPY_driver: nprocs = 1, N = 1, Alpha = X_alpha_Real ... ok  ok 
VecAXPY_driver: nprocs = 2, N = 3, Alpha = X_alpha_Real ... ok  ok 
VecAXPY_driver: nprocs = 2, N = 2, Alpha = X_alpha_Real ... ok  ok 
VecAXPY_driver: nprocs = 2, N = 1, Alpha = X_alpha_Real ... ok  ok 
=== Source files ===
VecAXPY_driver.cvl  (VecAXPY_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPY.c  (VecAXPY.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPY=VecAXPY_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPY_driver.cvl VecAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 7.61           transitions  : 45849 
   memory (bytes)    : 3.707764736E9  trace steps  : 27491 
   max process count : 3              valid calls  : 293674
   states            : 27492          provers      : z3    
   states saved      : 40983          prover calls : 15    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecAXPY=VecAXPY_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPY_driver.cvl VecAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPY_driver: nprocs = 1, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecAXPY_driver: nprocs = 1, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecAXPY_driver: nprocs = 1, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecAXPY_driver: nprocs = 2, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecAXPY_driver: nprocs = 2, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecAXPY_driver: nprocs = 2, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
=== Source files ===
VecAXPY_driver.cvl  (VecAXPY_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPY.c  (VecAXPY.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPY=VecAXPY_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPY_driver.cvl VecAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 8.85           transitions  : 54817 
   memory (bytes)    : 3.724541952E9  trace steps  : 32766 
   max process count : 3              valid calls  : 351191
   states            : 32767          provers      : z3    
   states saved      : 49083          prover calls : 19    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecAXPY: PASS (took 17s)

========================================== Verifying [25/63] VecDot ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecDot=VecDot_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_driver.cvl VecDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecDot_driver: nprocs = 1, N = 3 ... ok 
VecDot_driver: nprocs = 1, N = 2 ... ok 
VecDot_driver: nprocs = 1, N = 1 ... ok 
VecDot_driver: nprocs = 2, N = 3 ... ok 
VecDot_driver: nprocs = 2, N = 2 ... ok 
VecDot_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecDot_driver.cvl  (VecDot_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecDot.c  (VecDot.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecDot=VecDot_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_driver.cvl VecDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.27           transitions  : 25540 
   memory (bytes)    : 3.674210304E9  trace steps  : 14961 
   max process count : 3              valid calls  : 159310
   states            : 14962          provers      : z3    
   states saved      : 22283          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecDot=VecDot_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_driver.cvl VecDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecDot_driver: nprocs = 1, N = 3 ... ok 
VecDot_driver: nprocs = 1, N = 2 ... ok 
VecDot_driver: nprocs = 1, N = 1 ... ok 
VecDot_driver: nprocs = 2, N = 3 ... ok 
VecDot_driver: nprocs = 2, N = 2 ... ok 
VecDot_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecDot_driver.cvl  (VecDot_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecDot.c  (VecDot.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecDot=VecDot_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDot_driver.cvl VecDot.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 6.13           transitions  : 32538 
   memory (bytes)    : 3.758096384E9  trace steps  : 18891 
   max process count : 3              valid calls  : 200737
   states            : 18892          provers      : z3    
   states saved      : 28357          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecDot: PASS (took 11s)

========================================== Verifying [26/63] VecAXPY_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPY_Seq=VecAXPY_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPY_Seq_driver.cvl VecAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPY_Seq_driver: nprocs = 1, N = 3, Alpha = X_alpha_Real ... ok  ok 
VecAXPY_Seq_driver: nprocs = 1, N = 2, Alpha = X_alpha_Real ... ok  ok 
VecAXPY_Seq_driver: nprocs = 1, N = 1, Alpha = X_alpha_Real ... ok  ok 
VecAXPY_Seq_driver: nprocs = 2, N = 3, Alpha = X_alpha_Real ... ok  ok 
VecAXPY_Seq_driver: nprocs = 2, N = 2, Alpha = X_alpha_Real ... ok  ok 
VecAXPY_Seq_driver: nprocs = 2, N = 1, Alpha = X_alpha_Real ... ok  ok 
=== Source files ===
VecAXPY_Seq_driver.cvl  (VecAXPY_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPY_Seq.c  (VecAXPY_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPY_Seq=VecAXPY_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPY_Seq_driver.cvl VecAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.2            transitions  : 33740 
   memory (bytes)    : 3.707764736E9  trace steps  : 20100 
   max process count : 3              valid calls  : 214537
   states            : 20101          provers      : z3    
   states saved      : 30012          prover calls : 15    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecAXPY_Seq=VecAXPY_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPY_Seq_driver.cvl VecAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPY_Seq_driver: nprocs = 1, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecAXPY_Seq_driver: nprocs = 1, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecAXPY_Seq_driver: nprocs = 1, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecAXPY_Seq_driver: nprocs = 2, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecAXPY_Seq_driver: nprocs = 2, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecAXPY_Seq_driver: nprocs = 2, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
=== Source files ===
VecAXPY_Seq_driver.cvl  (VecAXPY_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPY_Seq.c  (VecAXPY_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPY_Seq=VecAXPY_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPY_Seq_driver.cvl VecAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.18           transitions  : 40513 
   memory (bytes)    : 3.674210304E9  trace steps  : 24018 
   max process count : 3              valid calls  : 258274
   states            : 24019          provers      : z3    
   states saved      : 36042          prover calls : 19    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecAXPY_Seq: PASS (took 14s)

========================================== Verifying [27/63] VecGetSize ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize=VecGetSize_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_driver.cvl VecGetSize.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecGetSize_driver: nproc = 1, N = X_N ... ok  ok  ok 
VecGetSize_driver: nproc = 2, N = X_N ... ok  ok  ok 
=== Source files ===
VecGetSize_driver.cvl  (VecGetSize_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecGetSize.c  (VecGetSize.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize=VecGetSize_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_driver.cvl VecGetSize.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 3.52           transitions  : 9393 
   memory (bytes)    : 3.674210304E9  trace steps  : 5201 
   max process count : 3              valid calls  : 53773
   states            : 5202           provers      : z3   
   states saved      : 7743           prover calls : 12   
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize=VecGetSize_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_driver.cvl VecGetSize.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecGetSize_driver: nproc = 1, N = X_N ... ok  ok  ok 
VecGetSize_driver: nproc = 2, N = X_N ... ok  ok  ok 
=== Source files ===
VecGetSize_driver.cvl  (VecGetSize_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecGetSize.c  (VecGetSize.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize=VecGetSize_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_driver.cvl VecGetSize.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 3.71         transitions  : 10274
   memory (bytes)    : 3.7748736E9  trace steps  : 5697 
   max process count : 3            valid calls  : 57349
   states            : 5698         provers      : z3   
   states saved      : 8508         prover calls : 12   
   state matches     : 0            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecGetSize: PASS (took 8s)

========================================== Verifying [28/63] VecAXPBYPCZ_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBYPCZ_Seq=VecAXPBYPCZ_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBYPCZ_Seq_driver.cvl VecAXPBYPCZ_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPBYPCZ_Seq_driver: nprocs = 1, N = 3, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok  ok  ok 
VecAXPBYPCZ_Seq_driver: nprocs = 1, N = 2, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok  ok  ok 
VecAXPBYPCZ_Seq_driver: nprocs = 1, N = 1, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok  ok  ok 
VecAXPBYPCZ_Seq_driver: nprocs = 2, N = 3, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok  ok  ok 
VecAXPBYPCZ_Seq_driver: nprocs = 2, N = 2, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok  ok  ok 
VecAXPBYPCZ_Seq_driver: nprocs = 2, N = 1, Alpha = X_alpha_Real, Beta = X_beta_Real, Gamma = X_gamma_Real ... ok  ok  ok  ok 
=== Source files ===
VecAXPBYPCZ_Seq_driver.cvl  (VecAXPBYPCZ_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPBYPCZ_Seq.c  (VecAXPBYPCZ_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBYPCZ_Seq=VecAXPBYPCZ_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBYPCZ_Seq_driver.cvl VecAXPBYPCZ_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 8.68           transitions  : 54243 
   memory (bytes)    : 3.506438144E9  trace steps  : 32618 
   max process count : 3              valid calls  : 345252
   states            : 32619          provers      : z3    
   states saved      : 49098          prover calls : 20    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBYPCZ_Seq=VecAXPBYPCZ_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBYPCZ_Seq_driver.cvl VecAXPBYPCZ_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPBYPCZ_Seq_driver: nprocs = 1, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok  ok  ok 
VecAXPBYPCZ_Seq_driver: nprocs = 1, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok  ok  ok 
VecAXPBYPCZ_Seq_driver: nprocs = 1, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok  ok  ok 
VecAXPBYPCZ_Seq_driver: nprocs = 2, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok  ok  ok 
VecAXPBYPCZ_Seq_driver: nprocs = 2, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok  ok  ok 
VecAXPBYPCZ_Seq_driver: nprocs = 2, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag}, Gamma = {.real=X_gamma_Real, .imag=X_gamma_Imag} ... ok  ok  ok  ok 
=== Source files ===
VecAXPBYPCZ_Seq_driver.cvl  (VecAXPBYPCZ_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPBYPCZ_Seq.c  (VecAXPBYPCZ_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBYPCZ_Seq=VecAXPBYPCZ_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBYPCZ_Seq_driver.cvl VecAXPBYPCZ_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 10.49          transitions  : 67282 
   memory (bytes)    : 3.590324224E9  trace steps  : 39800 
   max process count : 3              valid calls  : 426368
   states            : 39801          provers      : z3    
   states saved      : 60236          prover calls : 31    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecAXPBYPCZ_Seq: PASS (took 19s)

========================================== Verifying [29/63] VecPointwiseMult_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMult_Seq=VecPointwiseMult_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMult_Seq_driver.cvl VecPointwiseMult_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMult_Seq_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMult_Seq_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMult_Seq_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMult_Seq_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMult_Seq_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMult_Seq_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMult_Seq_driver.cvl  (VecPointwiseMult_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMult_Seq.c  (VecPointwiseMult_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMult_Seq=VecPointwiseMult_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMult_Seq_driver.cvl VecPointwiseMult_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.3            transitions  : 35013 
   memory (bytes)    : 3.674210304E9  trace steps  : 21084 
   max process count : 3              valid calls  : 226896
   states            : 21085          provers      : z3    
   states saved      : 31134          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMult_Seq=VecPointwiseMult_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMult_Seq_driver.cvl VecPointwiseMult_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMult_Seq_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMult_Seq_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMult_Seq_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMult_Seq_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMult_Seq_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMult_Seq_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMult_Seq_driver.cvl  (VecPointwiseMult_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMult_Seq.c  (VecPointwiseMult_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMult_Seq=VecPointwiseMult_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMult_Seq_driver.cvl VecPointwiseMult_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.07          transitions  : 40485 
   memory (bytes)    : 3.52321536E9  trace steps  : 24174 
   max process count : 3             valid calls  : 260860
   states            : 24175         provers      : z3    
   states saved      : 35885         prover calls : 12    
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecPointwiseMult_Seq: PASS (took 14s)

========================================== Verifying [30/63] VecConjugate_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecConjugate_Seq=VecConjugate_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecConjugate_Seq_driver.cvl VecConjugate_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecConjugate_Seq_driver: nprocs = 1, N = 3 ... ok 
VecConjugate_Seq_driver: nprocs = 1, N = 2 ... ok 
VecConjugate_Seq_driver: nprocs = 1, N = 1 ... ok 
VecConjugate_Seq_driver: nprocs = 2, N = 3 ... ok 
VecConjugate_Seq_driver: nprocs = 2, N = 2 ... ok 
VecConjugate_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecConjugate_Seq_driver.cvl  (VecConjugate_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecConjugate_Seq.c  (VecConjugate_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecConjugate_Seq=VecConjugate_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecConjugate_Seq_driver.cvl VecConjugate_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 4.67           transitions  : 20256 
   memory (bytes)    : 3.657433088E9  trace steps  : 11866 
   max process count : 3              valid calls  : 127380
   states            : 11867          provers      : z3    
   states saved      : 17643          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecConjugate_Seq=VecConjugate_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecConjugate_Seq_driver.cvl VecConjugate_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecConjugate_Seq_driver: nprocs = 1, N = 3 ... ok 
VecConjugate_Seq_driver: nprocs = 1, N = 2 ... ok 
VecConjugate_Seq_driver: nprocs = 1, N = 1 ... ok 
VecConjugate_Seq_driver: nprocs = 2, N = 3 ... ok 
VecConjugate_Seq_driver: nprocs = 2, N = 2 ... ok 
VecConjugate_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecConjugate_Seq_driver.cvl  (VecConjugate_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecConjugate_Seq.c  (VecConjugate_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecConjugate_Seq=VecConjugate_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecConjugate_Seq_driver.cvl VecConjugate_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 5.25           transitions  : 24021 
   memory (bytes)    : 3.556769792E9  trace steps  : 14030 
   max process count : 3              valid calls  : 151080
   states            : 14031          provers      : z3    
   states saved      : 20973          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecConjugate_Seq: PASS (took 10s)

========================================== Verifying [31/63] VecTDot_MPI ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecTDot_MPI=VecTDot_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_MPI_driver.cvl VecTDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecTDot_MPI_driver: nprocs = 1, N = 3 ... ok 
VecTDot_MPI_driver: nprocs = 1, N = 2 ... ok 
VecTDot_MPI_driver: nprocs = 1, N = 1 ... ok 
VecTDot_MPI_driver: nprocs = 2, N = 3 ... ok 
VecTDot_MPI_driver: nprocs = 2, N = 2 ... ok 
VecTDot_MPI_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecTDot_MPI_driver.cvl  (VecTDot_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecTDot_MPI.c  (VecTDot_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecTDot_MPI=VecTDot_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_MPI_driver.cvl VecTDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 4.98          transitions  : 22431 
   memory (bytes)    : 3.69098752E9  trace steps  : 13018 
   max process count : 3             valid calls  : 138609
   states            : 13019         provers      : z3    
   states saved      : 19431         prover calls : 12    
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecTDot_MPI=VecTDot_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_MPI_driver.cvl VecTDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecTDot_MPI_driver: nprocs = 1, N = 3 ... ok 
VecTDot_MPI_driver: nprocs = 1, N = 2 ... ok 
VecTDot_MPI_driver: nprocs = 1, N = 1 ... ok 
VecTDot_MPI_driver: nprocs = 2, N = 3 ... ok 
VecTDot_MPI_driver: nprocs = 2, N = 2 ... ok 
VecTDot_MPI_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecTDot_MPI_driver.cvl  (VecTDot_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecTDot_MPI.c  (VecTDot_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecTDot_MPI=VecTDot_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecTDot_MPI_driver.cvl VecTDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 5.79         transitions  : 27203 
   memory (bytes)    : 3.7748736E9  trace steps  : 15659 
   max process count : 3            valid calls  : 167258
   states            : 15660        provers      : z3    
   states saved      : 23502        prover calls : 12    
   state matches     : 0            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecTDot_MPI: PASS (took 11s)

========================================== Verifying [32/63] VecMin_MPI ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMin_MPI=VecMin_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMin_MPI_driver.cvl VecMin_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMin_MPI_driver: nprocs = 1, N = 3 ... ok  ok  ok  ok 
VecMin_MPI_driver: nprocs = 1, N = 2 ... ok  ok 
VecMin_MPI_driver: nprocs = 1, N = 1 ... ok 
VecMin_MPI_driver: nprocs = 1, N = 0 ... ok 
VecMin_MPI_driver: nprocs = 2, N = 3 ... ok  ok  ok  ok 
VecMin_MPI_driver: nprocs = 2, N = 2 ... ok  ok 
VecMin_MPI_driver: nprocs = 2, N = 1 ... ok 
VecMin_MPI_driver: nprocs = 2, N = 0 ... ok 
=== Source files ===
VecMin_MPI_driver.cvl  (VecMin_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMin_MPI.c  (VecMin_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMin_MPI=VecMin_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMin_MPI_driver.cvl VecMin_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.63           transitions  : 28228 
   memory (bytes)    : 3.791650816E9  trace steps  : 15409 
   max process count : 3              valid calls  : 156942
   states            : 15410          provers      : z3    
   states saved      : 23651          prover calls : 39    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMin_MPI=VecMin_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMin_MPI_driver.cvl VecMin_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMin_MPI_driver: nprocs = 1, N = 3 ... ok  ok  ok  ok 
VecMin_MPI_driver: nprocs = 1, N = 2 ... ok  ok 
VecMin_MPI_driver: nprocs = 1, N = 1 ... ok 
VecMin_MPI_driver: nprocs = 1, N = 0 ... ok 
VecMin_MPI_driver: nprocs = 2, N = 3 ... ok  ok  ok  ok 
VecMin_MPI_driver: nprocs = 2, N = 2 ... ok  ok 
VecMin_MPI_driver: nprocs = 2, N = 1 ... ok 
VecMin_MPI_driver: nprocs = 2, N = 0 ... ok 
=== Source files ===
VecMin_MPI_driver.cvl  (VecMin_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMin_MPI.c  (VecMin_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMin_MPI=VecMin_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMin_MPI_driver.cvl VecMin_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 6.61           transitions  : 30551 
   memory (bytes)    : 3.892314112E9  trace steps  : 16791 
   max process count : 3              valid calls  : 172128
   states            : 16792          provers      : z3    
   states saved      : 25757          prover calls : 39    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMin_MPI: PASS (took 13s)

========================================== Verifying [33/63] VecPointwiseMult ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMult=VecPointwiseMult_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMult_driver.cvl VecPointwiseMult.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMult_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMult_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMult_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMult_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMult_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMult_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMult_driver.cvl  (VecPointwiseMult_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMult.c  (VecPointwiseMult.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMult=VecPointwiseMult_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMult_driver.cvl VecPointwiseMult.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.72           transitions  : 35269 
   memory (bytes)    : 3.674210304E9  trace steps  : 21324 
   max process count : 3              valid calls  : 229656
   states            : 21325          provers      : z3    
   states saved      : 31416          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMult=VecPointwiseMult_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMult_driver.cvl VecPointwiseMult.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMult_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMult_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMult_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMult_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMult_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMult_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMult_driver.cvl  (VecPointwiseMult_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMult.c  (VecPointwiseMult.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMult=VecPointwiseMult_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMult_driver.cvl VecPointwiseMult.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.37           transitions  : 40741 
   memory (bytes)    : 3.791650816E9  trace steps  : 24414 
   max process count : 3              valid calls  : 263632
   states            : 24415          provers      : z3    
   states saved      : 36167          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecPointwiseMult: PASS (took 14s)

========================================== Verifying [34/63] VecPointwiseMin_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMin_Seq=VecPointwiseMin_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMin_Seq_driver.cvl VecPointwiseMin_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMin_Seq_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMin_Seq_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMin_Seq_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMin_Seq_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMin_Seq_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMin_Seq_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMin_Seq_driver.cvl  (VecPointwiseMin_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMin_Seq.c  (VecPointwiseMin_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMin_Seq=VecPointwiseMin_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMin_Seq_driver.cvl VecPointwiseMin_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.7            transitions  : 35052 
   memory (bytes)    : 3.875536896E9  trace steps  : 21076 
   max process count : 3              valid calls  : 227013
   states            : 21077          provers      : z3    
   states saved      : 31150          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMin_Seq=VecPointwiseMin_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMin_Seq_driver.cvl VecPointwiseMin_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMin_Seq_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMin_Seq_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMin_Seq_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMin_Seq_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMin_Seq_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMin_Seq_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMin_Seq_driver.cvl  (VecPointwiseMin_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMin_Seq.c  (VecPointwiseMin_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMin_Seq=VecPointwiseMin_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMin_Seq_driver.cvl VecPointwiseMin_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.58           transitions  : 40752 
   memory (bytes)    : 3.808428032E9  trace steps  : 24214 
   max process count : 3              valid calls  : 261169
   states            : 24215          provers      : z3    
   states saved      : 35985          prover calls : 24    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecPointwiseMin_Seq: PASS (took 15s)

========================================== Verifying [35/63] VecMAXPY_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPY_Seq=VecMAXPY_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPY_Seq_driver.cvl VecMAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMAXPY_Seq_driver: nprocs = 1, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 1 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 1 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 1 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 1 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 1 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecMAXPY_Seq_driver.cvl  (VecMAXPY_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMAXPY_Seq.c  (VecMAXPY_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPY_Seq=VecMAXPY_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPY_Seq_driver.cvl VecMAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 13.19          transitions  : 105805
   memory (bytes)    : 3.875536896E9  trace steps  : 64425 
   max process count : 3              valid calls  : 695215
   states            : 64426          provers      : z3    
   states saved      : 95023          prover calls : 18    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPY_Seq=VecMAXPY_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPY_Seq_driver.cvl VecMAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMAXPY_Seq_driver: nprocs = 1, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 1 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 1 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 1, N = 1 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 1 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 1 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 3 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 2 ... ok 
VecMAXPY_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecMAXPY_Seq_driver.cvl  (VecMAXPY_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMAXPY_Seq.c  (VecMAXPY_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPY_Seq=VecMAXPY_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPY_Seq_driver.cvl VecMAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 15.94          transitions  : 123370
   memory (bytes)    : 3.741319168E9  trace steps  : 73893 
   max process count : 3              valid calls  : 798881
   states            : 73894          provers      : z3    
   states saved      : 109818         prover calls : 18    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMAXPY_Seq: PASS (took 29s)

========================================== Verifying [36/63] VecCopy ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecCopy=VecCopy_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecCopy_driver.cvl VecCopy.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecCopy_driver: nprocs = 1, N = 3 ... ok 
VecCopy_driver: nprocs = 1, N = 2 ... ok 
VecCopy_driver: nprocs = 1, N = 1 ... ok 
VecCopy_driver: nprocs = 2, N = 3 ... ok 
VecCopy_driver: nprocs = 2, N = 2 ... ok 
VecCopy_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecCopy_driver.cvl  (VecCopy_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecCopy.c  (VecCopy.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecCopy=VecCopy_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecCopy_driver.cvl VecCopy.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.65           transitions  : 28218 
   memory (bytes)    : 3.925868544E9  trace steps  : 17130 
   max process count : 3              valid calls  : 184846
   states            : 17131          provers      : z3    
   states saved      : 25262          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecCopy=VecCopy_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecCopy_driver.cvl VecCopy.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecCopy_driver: nprocs = 1, N = 3 ... ok 
VecCopy_driver: nprocs = 1, N = 2 ... ok 
VecCopy_driver: nprocs = 1, N = 1 ... ok 
VecCopy_driver: nprocs = 2, N = 3 ... ok 
VecCopy_driver: nprocs = 2, N = 2 ... ok 
VecCopy_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecCopy_driver.cvl  (VecCopy_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecCopy.c  (VecCopy.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecCopy=VecCopy_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecCopy_driver.cvl VecCopy.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 6.24         transitions  : 32629 
   memory (bytes)    : 3.7748736E9  trace steps  : 19712 
   max process count : 3            valid calls  : 213231
   states            : 19713        provers      : z3    
   states saved      : 29214        prover calls : 12    
   state matches     : 0            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecCopy: PASS (took 12s)

========================================== Verifying [37/63] VecGetSize_MPI ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize_MPI=VecGetSize_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_MPI_driver.cvl VecGetSize_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecGetSize_MPI_driver: nproc = 1, N = X_N ... ok  ok  ok 
VecGetSize_MPI_driver: nproc = 2, N = X_N ... ok  ok  ok 
=== Source files ===
VecGetSize_MPI_driver.cvl  (VecGetSize_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecGetSize_MPI.c  (VecGetSize_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize_MPI=VecGetSize_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_MPI_driver.cvl VecGetSize_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 3.52           transitions  : 9285 
   memory (bytes)    : 3.657433088E9  trace steps  : 5111 
   max process count : 3              valid calls  : 52702
   states            : 5112           provers      : z3   
   states saved      : 7614           prover calls : 12   
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize_MPI=VecGetSize_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_MPI_driver.cvl VecGetSize_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecGetSize_MPI_driver: nproc = 1, N = X_N ... ok  ok  ok 
VecGetSize_MPI_driver: nproc = 2, N = X_N ... ok  ok  ok 
=== Source files ===
VecGetSize_MPI_driver.cvl  (VecGetSize_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecGetSize_MPI.c  (VecGetSize_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecGetSize_MPI=VecGetSize_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecGetSize_MPI_driver.cvl VecGetSize_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 3.8          transitions  : 10166
   memory (bytes)    : 3.7748736E9  trace steps  : 5607 
   max process count : 3            valid calls  : 56278
   states            : 5608         provers      : z3   
   states saved      : 8379         prover calls : 12   
   state matches     : 0            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecGetSize_MPI: PASS (took 8s)

========================================== Verifying [38/63] VecPointwiseDivide ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseDivide=VecPointwiseDivide_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseDivide_driver.cvl VecPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseDivide_driver: nproc = 1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseDivide_driver: nproc = 1, N = 2 ... ok  ok  ok  ok 
VecPointwiseDivide_driver: nproc = 1, N = 1 ... ok  ok 
VecPointwiseDivide_driver: nproc = 2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseDivide_driver: nproc = 2, N = 2 ... ok  ok  ok  ok 
VecPointwiseDivide_driver: nproc = 2, N = 1 ... ok  ok 
=== Source files ===
VecPointwiseDivide_driver.cvl  (VecPointwiseDivide_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseDivide.c  (VecPointwiseDivide.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseDivide=VecPointwiseDivide_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseDivide_driver.cvl VecPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 9.45           transitions  : 57701 
   memory (bytes)    : 3.137339392E9  trace steps  : 35277 
   max process count : 3              valid calls  : 374101
   states            : 35278          provers      : z3    
   states saved      : 52722          prover calls : 54    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseDivide=VecPointwiseDivide_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseDivide_driver.cvl VecPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseDivide_driver: nproc = 1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseDivide_driver: nproc = 1, N = 2 ... ok  ok  ok  ok 
VecPointwiseDivide_driver: nproc = 1, N = 1 ... ok  ok 
VecPointwiseDivide_driver: nproc = 2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseDivide_driver: nproc = 2, N = 2 ... ok  ok  ok  ok 
VecPointwiseDivide_driver: nproc = 2, N = 1 ... ok  ok 
=== Source files ===
VecPointwiseDivide_driver.cvl  (VecPointwiseDivide_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseDivide.c  (VecPointwiseDivide.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseDivide=VecPointwiseDivide_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseDivide_driver.cvl VecPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 11.6          transitions  : 70577 
   memory (bytes)    : 3.85875968E9  trace steps  : 42803 
   max process count : 3             valid calls  : 461208
   states            : 42804         provers      : z3    
   states saved      : 64184         prover calls : 77    
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecPointwiseDivide: PASS (took 21s)

========================================== Verifying [39/63] VecAYPX ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecAYPX=VecAYPX_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAYPX_driver.cvl VecAYPX.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAYPX_driver: nprocs = 1, N = 3, Beta = X_beta_Real ... ok  ok 
VecAYPX_driver: nprocs = 1, N = 2, Beta = X_beta_Real ... ok  ok 
VecAYPX_driver: nprocs = 1, N = 1, Beta = X_beta_Real ... ok  ok 
VecAYPX_driver: nprocs = 2, N = 3, Beta = X_beta_Real ... ok  ok 
VecAYPX_driver: nprocs = 2, N = 2, Beta = X_beta_Real ... ok  ok 
VecAYPX_driver: nprocs = 2, N = 1, Beta = X_beta_Real ... ok  ok 
=== Source files ===
VecAYPX_driver.cvl  (VecAYPX_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAYPX.c  (VecAYPX.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAYPX=VecAYPX_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAYPX_driver.cvl VecAYPX.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.37           transitions  : 35079 
   memory (bytes)    : 3.590324224E9  trace steps  : 20899 
   max process count : 3              valid calls  : 222420
   states            : 20900          provers      : z3    
   states saved      : 31211          prover calls : 15    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecAYPX=VecAYPX_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAYPX_driver.cvl VecAYPX.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAYPX_driver: nprocs = 1, N = 3, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
VecAYPX_driver: nprocs = 1, N = 2, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
VecAYPX_driver: nprocs = 1, N = 1, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
VecAYPX_driver: nprocs = 2, N = 3, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
VecAYPX_driver: nprocs = 2, N = 2, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
VecAYPX_driver: nprocs = 2, N = 1, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok 
=== Source files ===
VecAYPX_driver.cvl  (VecAYPX_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAYPX.c  (VecAYPX.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAYPX=VecAYPX_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAYPX_driver.cvl VecAYPX.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.26           transitions  : 41456 
   memory (bytes)    : 3.674210304E9  trace steps  : 24608 
   max process count : 3              valid calls  : 262825
   states            : 24609          provers      : z3    
   states saved      : 36920          prover calls : 19    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecAYPX: PASS (took 13s)

========================================== Verifying [40/63] VecMaxPointwiseDivide_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide_Seq=VecMaxPointwiseDivide_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_Seq_driver.cvl VecMaxPointwiseDivide_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMaxPointwiseDivide_Seq_driver: nproc=1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecMaxPointwiseDivide_Seq_driver: nproc=1, N = 2 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_Seq_driver: nproc=1, N = 1 ... ok  ok 
VecMaxPointwiseDivide_Seq_driver: nproc=2, N = 3 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_Seq_driver: nproc=2, N = 2 ... ok  ok 
VecMaxPointwiseDivide_Seq_driver: nproc=2, N = 1 ... ok  ok 
=== Source files ===
VecMaxPointwiseDivide_Seq_driver.cvl  (VecMaxPointwiseDivide_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMaxPointwiseDivide_Seq.c  (VecMaxPointwiseDivide_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide_Seq=VecMaxPointwiseDivide_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_Seq_driver.cvl VecMaxPointwiseDivide_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.6            transitions  : 24159 
   memory (bytes)    : 3.909091328E9  trace steps  : 13517 
   max process count : 3              valid calls  : 133317
   states            : 13518          provers      : z3    
   states saved      : 20671          prover calls : 50    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide_Seq=VecMaxPointwiseDivide_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_Seq_driver.cvl VecMaxPointwiseDivide_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMaxPointwiseDivide_Seq_driver: nproc=1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecMaxPointwiseDivide_Seq_driver: nproc=1, N = 2 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_Seq_driver: nproc=1, N = 1 ... ok  ok 
VecMaxPointwiseDivide_Seq_driver: nproc=2, N = 3 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_Seq_driver: nproc=2, N = 2 ... ok  ok 
VecMaxPointwiseDivide_Seq_driver: nproc=2, N = 1 ... ok  ok 
=== Source files ===
VecMaxPointwiseDivide_Seq_driver.cvl  (VecMaxPointwiseDivide_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMaxPointwiseDivide_Seq.c  (VecMaxPointwiseDivide_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide_Seq=VecMaxPointwiseDivide_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_Seq_driver.cvl VecMaxPointwiseDivide_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.14           transitions  : 27332 
   memory (bytes)    : 3.238002688E9  trace steps  : 14965 
   max process count : 3              valid calls  : 147872
   states            : 14966          provers      : z3    
   states saved      : 22930          prover calls : 86    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMaxPointwiseDivide_Seq: PASS (took 13s)

========================================== Verifying [41/63] VecMax_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMax_Seq=VecMax_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_Seq_driver.cvl VecMax_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMax_Seq_driver: nprocs = 1, N = 3 ... ok  ok  ok  ok 
VecMax_Seq_driver: nprocs = 1, N = 2 ... ok  ok 
VecMax_Seq_driver: nprocs = 1, N = 1 ... ok 
VecMax_Seq_driver: nprocs = 1, N = 0 ... ok 
VecMax_Seq_driver: nprocs = 2, N = 3 ... ok  ok 
VecMax_Seq_driver: nprocs = 2, N = 2 ... ok 
VecMax_Seq_driver: nprocs = 2, N = 1 ... ok 
VecMax_Seq_driver: nprocs = 2, N = 0 ... ok 
=== Source files ===
VecMax_Seq_driver.cvl  (VecMax_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMax_Seq.c  (VecMax_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMax_Seq=VecMax_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_Seq_driver.cvl VecMax_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 4.11           transitions  : 13934
   memory (bytes)    : 3.724541952E9  trace steps  : 7673 
   max process count : 3              valid calls  : 76208
   states            : 7674           provers      : z3   
   states saved      : 11515          prover calls : 23   
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMax_Seq=VecMax_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_Seq_driver.cvl VecMax_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMax_Seq_driver: nprocs = 1, N = 3 ... ok  ok  ok  ok 
VecMax_Seq_driver: nprocs = 1, N = 2 ... ok  ok 
VecMax_Seq_driver: nprocs = 1, N = 1 ... ok 
VecMax_Seq_driver: nprocs = 1, N = 0 ... ok 
VecMax_Seq_driver: nprocs = 2, N = 3 ... ok  ok 
VecMax_Seq_driver: nprocs = 2, N = 2 ... ok 
VecMax_Seq_driver: nprocs = 2, N = 1 ... ok 
VecMax_Seq_driver: nprocs = 2, N = 0 ... ok 
=== Source files ===
VecMax_Seq_driver.cvl  (VecMax_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMax_Seq.c  (VecMax_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMax_Seq=VecMax_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_Seq_driver.cvl VecMax_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 4.37          transitions  : 15209
   memory (bytes)    : 3.94264576E9  trace steps  : 8389 
   max process count : 3             valid calls  : 81320
   states            : 8390          provers      : z3   
   states saved      : 12615         prover calls : 23   
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMax_Seq: PASS (took 9s)

========================================== Verifying [42/63] VecMaxPointwiseDivide ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide=VecMaxPointwiseDivide_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_driver.cvl VecMaxPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMaxPointwiseDivide_driver: nproc = 1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecMaxPointwiseDivide_driver: nproc = 1, N = 2 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_driver: nproc = 1, N = 1 ... ok  ok 
VecMaxPointwiseDivide_driver: nproc = 2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecMaxPointwiseDivide_driver: nproc = 2, N = 2 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_driver: nproc = 2, N = 1 ... ok  ok 
=== Source files ===
VecMaxPointwiseDivide_driver.cvl  (VecMaxPointwiseDivide_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMaxPointwiseDivide.c  (VecMaxPointwiseDivide.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide=VecMaxPointwiseDivide_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_driver.cvl VecMaxPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.78          transitions  : 33476 
   memory (bytes)    : 3.01989888E9  trace steps  : 18868 
   max process count : 3             valid calls  : 200726
   states            : 18869         provers      : z3    
   states saved      : 28904         prover calls : 55    
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide=VecMaxPointwiseDivide_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_driver.cvl VecMaxPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMaxPointwiseDivide_driver: nproc = 1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecMaxPointwiseDivide_driver: nproc = 1, N = 2 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_driver: nproc = 1, N = 1 ... ok  ok 
VecMaxPointwiseDivide_driver: nproc = 2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecMaxPointwiseDivide_driver: nproc = 2, N = 2 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_driver: nproc = 2, N = 1 ... ok  ok 
=== Source files ===
VecMaxPointwiseDivide_driver.cvl  (VecMaxPointwiseDivide_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMaxPointwiseDivide.c  (VecMaxPointwiseDivide.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide=VecMaxPointwiseDivide_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_driver.cvl VecMaxPointwiseDivide.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 8.86           transitions  : 36772 
   memory (bytes)    : 3.657433088E9  trace steps  : 20342 
   max process count : 3              valid calls  : 221596
   states            : 20343          provers      : z3    
   states saved      : 31241          prover calls : 102   
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMaxPointwiseDivide: PASS (took 16s)

========================================== Verifying [43/63] VecMAXPBY ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPBY=VecMAXPBY_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPBY_driver.cvl VecMAXPBY.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMAXPBY_driver: nprocs = 1, N = 3, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 2, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 1, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 3, NV = 2 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 2, NV = 2 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 1, NV = 2 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 3, NV = 1 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 2, NV = 1 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 1, NV = 1 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 3, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 2, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 1, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 3, NV = 2 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 2, NV = 2 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 1, NV = 2 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 3, NV = 1 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 2, NV = 1 ...18s: mem=3648Mb trans=138394 traceSteps=84553 explored=84554 saved=125623 prove=21
 ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 1, NV = 1 ... ok  ok 
=== Source files ===
VecMAXPBY_driver.cvl  (VecMAXPBY_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMAXPBY.c  (VecMAXPBY.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPBY=VecMAXPBY_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPBY_driver.cvl VecMAXPBY.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 19.78          transitions  : 159742 
   memory (bytes)    : 3.825205248E9  trace steps  : 97368  
   max process count : 3              valid calls  : 1044303
   states            : 97369          provers      : z3     
   states saved      : 145027         prover calls : 21     
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPBY=VecMAXPBY_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPBY_driver.cvl VecMAXPBY.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMAXPBY_driver: nprocs = 1, N = 3, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 2, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 1, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 3, NV = 2 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 2, NV = 2 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 1, NV = 2 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 3, NV = 1 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 2, NV = 1 ... ok  ok 
VecMAXPBY_driver: nprocs = 1, N = 1, NV = 1 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 3, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 2, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 1, NV = 3 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 3, NV = 2 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 2, NV = 2 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 1, NV = 2 ...18s: mem=3280Mb trans=134857 traceSteps=81024 explored=81025 saved=120930 prove=25
 ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 3, NV = 1 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 2, NV = 1 ... ok  ok 
VecMAXPBY_driver: nprocs = 2, N = 1, NV = 1 ... ok  ok 
=== Source files ===
VecMAXPBY_driver.cvl  (VecMAXPBY_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMAXPBY.c  (VecMAXPBY.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMAXPBY=VecMAXPBY_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMAXPBY_driver.cvl VecMAXPBY.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 23.91         transitions  : 188818 
   memory (bytes)    : 3.43932928E9  trace steps  : 113169 
   max process count : 3             valid calls  : 1217910
   states            : 113170        provers      : z3     
   states saved      : 169743        prover calls : 25     
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMAXPBY: PASS (took 44s)

========================================== Verifying [44/63] VecMin ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMin=VecMin_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMin_driver.cvl VecMin.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMin_driver: nprocs = 1, N = 3 ... ok ok ok ok
VecMin_driver: nprocs = 1, N = 2 ... ok ok
VecMin_driver: nprocs = 1, N = 1 ... ok
VecMin_driver: nprocs = 2, N = 3 ... ok ok ok ok
VecMin_driver: nprocs = 2, N = 2 ... ok ok
VecMin_driver: nprocs = 2, N = 1 ... ok
=== Source files ===
VecMin_driver.cvl  (VecMin_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMin.c  (VecMin.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMin=VecMin_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMin_driver.cvl VecMin.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.11           transitions  : 23731 
   memory (bytes)    : 3.892314112E9  trace steps  : 13134 
   max process count : 3              valid calls  : 133320
   states            : 13135          provers      : z3    
   states saved      : 19950          prover calls : 26    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMin=VecMin_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMin_driver.cvl VecMin.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMin_driver: nprocs = 1, N = 3 ... ok ok ok ok
VecMin_driver: nprocs = 1, N = 2 ... ok ok
VecMin_driver: nprocs = 1, N = 1 ... ok
VecMin_driver: nprocs = 2, N = 3 ... ok ok ok ok
VecMin_driver: nprocs = 2, N = 2 ... ok ok
VecMin_driver: nprocs = 2, N = 1 ... ok
=== Source files ===
VecMin_driver.cvl  (VecMin_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMin.c  (VecMin.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMin=VecMin_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMin_driver.cvl VecMin.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 5.79           transitions  : 27568 
   memory (bytes)    : 3.825205248E9  trace steps  : 15493 
   max process count : 3              valid calls  : 158841
   states            : 15494          provers      : z3    
   states saved      : 23527          prover calls : 26    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMin: PASS (took 11s)

========================================== Verifying [45/63] VecCopy_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecCopy_Seq=VecCopy_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecCopy_Seq_driver.cvl VecCopy_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecCopy_Seq_driver: nprocs = 1, N = 3 ... ok 
VecCopy_Seq_driver: nprocs = 1, N = 2 ... ok 
VecCopy_Seq_driver: nprocs = 1, N = 1 ... ok 
VecCopy_Seq_driver: nprocs = 2, N = 3 ... ok 
VecCopy_Seq_driver: nprocs = 2, N = 2 ... ok 
VecCopy_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecCopy_Seq_driver.cvl  (VecCopy_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecCopy_Seq.c  (VecCopy_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecCopy_Seq=VecCopy_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecCopy_Seq_driver.cvl VecCopy_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.46           transitions  : 27614 
   memory (bytes)    : 3.707764736E9  trace steps  : 16553 
   max process count : 3              valid calls  : 177838
   states            : 16554          provers      : z3    
   states saved      : 24516          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecCopy_Seq=VecCopy_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecCopy_Seq_driver.cvl VecCopy_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecCopy_Seq_driver: nprocs = 1, N = 3 ... ok 
VecCopy_Seq_driver: nprocs = 1, N = 2 ... ok 
VecCopy_Seq_driver: nprocs = 1, N = 1 ... ok 
VecCopy_Seq_driver: nprocs = 2, N = 3 ... ok 
VecCopy_Seq_driver: nprocs = 2, N = 2 ... ok 
VecCopy_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecCopy_Seq_driver.cvl  (VecCopy_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecCopy_Seq.c  (VecCopy_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecCopy_Seq=VecCopy_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecCopy_Seq_driver.cvl VecCopy_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 6.25           transitions  : 32025 
   memory (bytes)    : 3.808428032E9  trace steps  : 19135 
   max process count : 3              valid calls  : 206143
   states            : 19136          provers      : z3    
   states saved      : 28468          prover calls : 16    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecCopy_Seq: PASS (took 12s)

========================================== Verifying [46/63] VecMDot_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMDot_Seq=VecMDot_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_Seq_driver.cvl VecMDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMDot_Seq_driver.cvl  (VecMDot_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMDot_Seq.c  (VecMDot_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMDot_Seq=VecMDot_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_Seq_driver.cvl VecMDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 10.9          transitions  : 82247 
   memory (bytes)    : 3.27155712E9  trace steps  : 49225 
   max process count : 3             valid calls  : 520128
   states            : 49226         provers      : z3    
   states saved      : 72439         prover calls : 51    
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMDot_Seq=VecMDot_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_Seq_driver.cvl VecMDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_Seq_driver: nprocs=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMDot_Seq_driver.cvl  (VecMDot_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMDot_Seq.c  (VecMDot_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMDot_Seq=VecMDot_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_Seq_driver.cvl VecMDot_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 12.18          transitions  : 93816 
   memory (bytes)    : 3.388997632E9  trace steps  : 54413 
   max process count : 3              valid calls  : 570596
   states            : 54414          provers      : z3    
   states saved      : 80785          prover calls : 51    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMDot_Seq: PASS (took 23s)

========================================== Verifying [47/63] VecAXPBY_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBY_Seq=VecAXPBY_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBY_Seq_driver.cvl VecAXPBY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPBY_Seq_driver: nprocs = 1, N = 3, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok  ok  ok  ok 
VecAXPBY_Seq_driver: nprocs = 1, N = 2, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok  ok  ok  ok 
VecAXPBY_Seq_driver: nprocs = 1, N = 1, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok  ok  ok  ok 
VecAXPBY_Seq_driver: nprocs = 2, N = 3, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok  ok  ok  ok 
VecAXPBY_Seq_driver: nprocs = 2, N = 2, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok  ok  ok  ok 
VecAXPBY_Seq_driver: nprocs = 2, N = 1, Alpha = X_alpha_Real, Beta = X_beta_Real ... ok  ok  ok  ok  ok 
=== Source files ===
VecAXPBY_Seq_driver.cvl  (VecAXPBY_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPBY_Seq.c  (VecAXPBY_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBY_Seq=VecAXPBY_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBY_Seq_driver.cvl VecAXPBY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 8.14           transitions  : 51879 
   memory (bytes)    : 3.674210304E9  trace steps  : 30845 
   max process count : 3              valid calls  : 325736
   states            : 30846          provers      : z3    
   states saved      : 46728          prover calls : 24    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBY_Seq=VecAXPBY_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBY_Seq_driver.cvl VecAXPBY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecAXPBY_Seq_driver: nprocs = 1, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
VecAXPBY_Seq_driver: nprocs = 1, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
VecAXPBY_Seq_driver: nprocs = 1, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
VecAXPBY_Seq_driver: nprocs = 2, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
VecAXPBY_Seq_driver: nprocs = 2, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
VecAXPBY_Seq_driver: nprocs = 2, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag}, Beta = {.real=X_beta_Real, .imag=X_beta_Imag} ... ok  ok  ok  ok  ok 
=== Source files ===
VecAXPBY_Seq_driver.cvl  (VecAXPBY_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecAXPBY_Seq.c  (VecAXPBY_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecAXPBY_Seq=VecAXPBY_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecAXPBY_Seq_driver.cvl VecAXPBY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 10.26          transitions  : 65619 
   memory (bytes)    : 3.724541952E9  trace steps  : 38737 
   max process count : 3              valid calls  : 415981
   states            : 38738          provers      : z3    
   states saved      : 58879          prover calls : 37    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecAXPBY_Seq: PASS (took 19s)

========================================== Verifying [48/63] VecNorm_MPI ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_MPI=VecNorm_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_MPI_driver.cvl VecNorm_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNorm_MPI_driver: nprocs = 1, N = 3, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 1, N = 3, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 1, N = 3, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 1, N = 3, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 1, N = 3, normType = NORM_1_AND_2... ok 
VecNorm_MPI_driver: nprocs = 1, N = 2, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 1, N = 2, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 1, N = 2, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 1, N = 2, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 1, N = 2, normType = NORM_1_AND_2... ok 
VecNorm_MPI_driver: nprocs = 1, N = 1, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 1, N = 1, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 1, N = 1, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 1, N = 1, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 1, N = 1, normType = NORM_1_AND_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_1_AND_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 2, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 2, N = 2, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 2, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 2, N = 2, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 2, N = 2, normType = NORM_1_AND_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 1, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 2, N = 1, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 1, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 2, N = 1, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 2, N = 1, normType = NORM_1_AND_2... ok 
=== Source files ===
VecNorm_MPI_driver.cvl  (VecNorm_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNorm_MPI.c  (VecNorm_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_MPI=VecNorm_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_MPI_driver.cvl VecNorm_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 7.27          transitions  : 59840 
   memory (bytes)    : 3.69098752E9  trace steps  : 33596 
   max process count : 3             valid calls  : 353287
   states            : 33573         provers      : z3    
   states saved      : 50649         prover calls : 20    
   state matches     : 24            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_MPI=VecNorm_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_MPI_driver.cvl VecNorm_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNorm_MPI_driver: nprocs = 1, N = 3, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 1, N = 3, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 1, N = 3, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 1, N = 3, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 1, N = 3, normType = NORM_1_AND_2... ok 
VecNorm_MPI_driver: nprocs = 1, N = 2, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 1, N = 2, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 1, N = 2, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 1, N = 2, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 1, N = 2, normType = NORM_1_AND_2... ok 
VecNorm_MPI_driver: nprocs = 1, N = 1, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 1, N = 1, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 1, N = 1, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 1, N = 1, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 1, N = 1, normType = NORM_1_AND_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 2, N = 3, normType = NORM_1_AND_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 2, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 2, N = 2, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 2, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 2, N = 2, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 2, N = 2, normType = NORM_1_AND_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 1, normType = NORM_1... ok 
VecNorm_MPI_driver: nprocs = 2, N = 1, normType = NORM_2... ok 
VecNorm_MPI_driver: nprocs = 2, N = 1, normType = NORM_FROBENIUS... ok 
VecNorm_MPI_driver: nprocs = 2, N = 1, normType = NORM_INFINITY... ok 
VecNorm_MPI_driver: nprocs = 2, N = 1, normType = NORM_1_AND_2... ok 
=== Source files ===
VecNorm_MPI_driver.cvl  (VecNorm_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNorm_MPI.c  (VecNorm_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_MPI=VecNorm_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_MPI_driver.cvl VecNorm_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.93           transitions  : 65129 
   memory (bytes)    : 3.087007744E9  trace steps  : 36382 
   max process count : 3              valid calls  : 382871
   states            : 36359          provers      : z3    
   states saved      : 55101          prover calls : 24    
   state matches     : 24             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecNorm_MPI: PASS (took 15s)

========================================== Verifying [49/63] VecWAXPY ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecWAXPY=VecWAXPY_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecWAXPY_driver.cvl VecWAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecWAXPY_driver: nprocs = 1, N = 3, Alpha = X_alpha_Real ... ok  ok 
VecWAXPY_driver: nprocs = 1, N = 2, Alpha = X_alpha_Real ... ok  ok 
VecWAXPY_driver: nprocs = 1, N = 1, Alpha = X_alpha_Real ... ok  ok 
VecWAXPY_driver: nprocs = 2, N = 3, Alpha = X_alpha_Real ... ok  ok 
VecWAXPY_driver: nprocs = 2, N = 2, Alpha = X_alpha_Real ... ok  ok 
VecWAXPY_driver: nprocs = 2, N = 1, Alpha = X_alpha_Real ... ok  ok 
=== Source files ===
VecWAXPY_driver.cvl  (VecWAXPY_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecWAXPY.c  (VecWAXPY.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecWAXPY=VecWAXPY_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecWAXPY_driver.cvl VecWAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 10.65          transitions  : 68210 
   memory (bytes)    : 3.925868544E9  trace steps  : 41510 
   max process count : 3              valid calls  : 444735
   states            : 41511          provers      : z3    
   states saved      : 61706          prover calls : 15    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecWAXPY=VecWAXPY_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecWAXPY_driver.cvl VecWAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecWAXPY_driver: nprocs = 1, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecWAXPY_driver: nprocs = 1, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecWAXPY_driver: nprocs = 1, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecWAXPY_driver: nprocs = 2, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecWAXPY_driver: nprocs = 2, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecWAXPY_driver: nprocs = 2, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
=== Source files ===
VecWAXPY_driver.cvl  (VecWAXPY_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecWAXPY.c  (VecWAXPY.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecWAXPY=VecWAXPY_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecWAXPY_driver.cvl VecWAXPY.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 12.77          transitions  : 82424 
   memory (bytes)    : 3.573547008E9  trace steps  : 49959 
   max process count : 3              valid calls  : 537005
   states            : 49960          provers      : z3    
   states saved      : 74642          prover calls : 19    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecWAXPY: PASS (took 24s)

========================================== Verifying [50/63] VecPointwiseMaxAbs ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMaxAbs=VecPointwiseMaxAbs_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMaxAbs_driver.cvl VecPointwiseMaxAbs.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMaxAbs_driver: nproc = 1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_driver: nproc = 1, N = 2 ... ok  ok  ok  ok 
VecPointwiseMaxAbs_driver: nproc = 1, N = 1 ... ok  ok 
VecPointwiseMaxAbs_driver: nproc = 2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_driver: nproc = 2, N = 2 ... ok  ok  ok  ok 
VecPointwiseMaxAbs_driver: nproc = 2, N = 1 ... ok  ok 
=== Source files ===
VecPointwiseMaxAbs_driver.cvl  (VecPointwiseMaxAbs_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMaxAbs.c  (VecPointwiseMaxAbs.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMaxAbs=VecPointwiseMaxAbs_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMaxAbs_driver.cvl VecPointwiseMaxAbs.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 9.76           transitions  : 58846 
   memory (bytes)    : 3.657433088E9  trace steps  : 35432 
   max process count : 3              valid calls  : 374538
   states            : 35433          provers      : z3    
   states saved      : 53401          prover calls : 54    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMaxAbs=VecPointwiseMaxAbs_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMaxAbs_driver.cvl VecPointwiseMaxAbs.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMaxAbs_driver: nproc = 1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_driver: nproc = 1, N = 2 ... ok  ok  ok  ok 
VecPointwiseMaxAbs_driver: nproc = 1, N = 1 ... ok  ok 
VecPointwiseMaxAbs_driver: nproc = 2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_driver: nproc = 2, N = 2 ... ok  ok  ok  ok 
VecPointwiseMaxAbs_driver: nproc = 2, N = 1 ... ok  ok 
=== Source files ===
VecPointwiseMaxAbs_driver.cvl  (VecPointwiseMaxAbs_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMaxAbs.c  (VecPointwiseMaxAbs.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMaxAbs=VecPointwiseMaxAbs_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMaxAbs_driver.cvl VecPointwiseMaxAbs.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 13.25        transitions  : 72544 
   memory (bytes)    : 3.3554432E9  trace steps  : 43322 
   max process count : 3            valid calls  : 461911
   states            : 43323        provers      : z3    
   states saved      : 65460        prover calls : 166   
   state matches     : 0            

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecPointwiseMaxAbs: PASS (took 23s)

========================================== Verifying [51/63] VecWAXPY_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecWAXPY_Seq=VecWAXPY_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecWAXPY_Seq_driver.cvl VecWAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecWAXPY_Seq_driver: nprocs = 1, N = 3, Alpha = X_alpha_Real ... ok  ok  ok  ok 
VecWAXPY_Seq_driver: nprocs = 1, N = 2, Alpha = X_alpha_Real ... ok  ok  ok  ok 
VecWAXPY_Seq_driver: nprocs = 1, N = 1, Alpha = X_alpha_Real ... ok  ok  ok  ok 
VecWAXPY_Seq_driver: nprocs = 2, N = 3, Alpha = X_alpha_Real ... ok  ok  ok  ok 
VecWAXPY_Seq_driver: nprocs = 2, N = 2, Alpha = X_alpha_Real ... ok  ok  ok  ok 
VecWAXPY_Seq_driver: nprocs = 2, N = 1, Alpha = X_alpha_Real ... ok  ok  ok  ok 
=== Source files ===
VecWAXPY_Seq_driver.cvl  (VecWAXPY_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecWAXPY_Seq.c  (VecWAXPY_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecWAXPY_Seq=VecWAXPY_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecWAXPY_Seq_driver.cvl VecWAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 9.99           transitions  : 67080 
   memory (bytes)    : 3.976200192E9  trace steps  : 40715 
   max process count : 3              valid calls  : 434449
   states            : 40716          provers      : z3    
   states saved      : 61125          prover calls : 19    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecWAXPY_Seq=VecWAXPY_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecWAXPY_Seq_driver.cvl VecWAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecWAXPY_Seq_driver: nprocs = 1, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok  ok  ok  ok 
VecWAXPY_Seq_driver: nprocs = 1, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok  ok  ok  ok 
VecWAXPY_Seq_driver: nprocs = 1, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok  ok  ok  ok 
VecWAXPY_Seq_driver: nprocs = 2, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok  ok  ok  ok 
VecWAXPY_Seq_driver: nprocs = 2, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok  ok  ok  ok 
VecWAXPY_Seq_driver: nprocs = 2, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok  ok  ok  ok 
=== Source files ===
VecWAXPY_Seq_driver.cvl  (VecWAXPY_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecWAXPY_Seq.c  (VecWAXPY_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecWAXPY_Seq=VecWAXPY_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecWAXPY_Seq_driver.cvl VecWAXPY_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 13.72          transitions  : 91315 
   memory (bytes)    : 3.674210304E9  trace steps  : 55109 
   max process count : 3              valid calls  : 593729
   states            : 55110          provers      : z3    
   states saved      : 83255          prover calls : 37    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecWAXPY_Seq: PASS (took 24s)

========================================== Verifying [52/63] VecPointwiseDivide_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseDivide_Seq=VecPointwiseDivide_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseDivide_Seq_driver.cvl VecPointwiseDivide_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseDivide_Seq_driver: nproc = 1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseDivide_Seq_driver: nproc = 1, N = 2 ... ok  ok  ok  ok 
VecPointwiseDivide_Seq_driver: nproc = 1, N = 1 ... ok  ok 
VecPointwiseDivide_Seq_driver: nproc = 2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseDivide_Seq_driver: nproc = 2, N = 2 ... ok  ok  ok  ok 
VecPointwiseDivide_Seq_driver: nproc = 2, N = 1 ... ok  ok 
=== Source files ===
VecPointwiseDivide_Seq_driver.cvl  (VecPointwiseDivide_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseDivide_Seq.c  (VecPointwiseDivide_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseDivide_Seq=VecPointwiseDivide_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseDivide_Seq_driver.cvl VecPointwiseDivide_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 9.34           transitions  : 57030 
   memory (bytes)    : 3.154116608E9  trace steps  : 34350 
   max process count : 3              valid calls  : 361854
   states            : 34351          provers      : z3    
   states saved      : 51807          prover calls : 54    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseDivide_Seq=VecPointwiseDivide_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseDivide_Seq_driver.cvl VecPointwiseDivide_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseDivide_Seq_driver: nproc = 1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseDivide_Seq_driver: nproc = 1, N = 2 ... ok  ok  ok  ok 
VecPointwiseDivide_Seq_driver: nproc = 1, N = 1 ... ok  ok 
VecPointwiseDivide_Seq_driver: nproc = 2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseDivide_Seq_driver: nproc = 2, N = 2 ... ok  ok  ok  ok 
VecPointwiseDivide_Seq_driver: nproc = 2, N = 1 ... ok  ok 
=== Source files ===
VecPointwiseDivide_Seq_driver.cvl  (VecPointwiseDivide_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseDivide_Seq.c  (VecPointwiseDivide_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseDivide_Seq=VecPointwiseDivide_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseDivide_Seq_driver.cvl VecPointwiseDivide_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 11.48          transitions  : 70051 
   memory (bytes)    : 3.808428032E9  trace steps  : 41992 
   max process count : 3              valid calls  : 448133
   states            : 41993          provers      : z3    
   states saved      : 63443          prover calls : 77    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecPointwiseDivide_Seq: PASS (took 21s)

========================================== Verifying [53/63] VecNorm_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_Seq=VecNorm_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_Seq_driver.cvl VecNorm_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNorm_Seq_driver: nprocs = 1, N = 3, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 3, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 3, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 3, normType = NORM_INFINITY ... ok  ok  ok  ok  ok  ok  ok  ok 
VecNorm_Seq_driver: nprocs = 1, N = 3, normType = NORM_1_AND_2 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 2, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 2, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 2, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 2, normType = NORM_INFINITY ... ok  ok  ok  ok 
VecNorm_Seq_driver: nprocs = 1, N = 2, normType = NORM_1_AND_2 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 1, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 1, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 1, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 1, normType = NORM_INFINITY ... ok  ok 
VecNorm_Seq_driver: nprocs = 1, N = 1, normType = NORM_1_AND_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 3, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 3, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 3, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 3, normType = NORM_INFINITY ... ok  ok  ok  ok 
VecNorm_Seq_driver: nprocs = 2, N = 3, normType = NORM_1_AND_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 2, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 2, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 2, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 2, normType = NORM_INFINITY ... ok  ok 
VecNorm_Seq_driver: nprocs = 2, N = 2, normType = NORM_1_AND_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 1, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 1, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 1, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 1, normType = NORM_INFINITY ... ok  ok 
VecNorm_Seq_driver: nprocs = 2, N = 1, normType = NORM_1_AND_2 ... ok 
=== Source files ===
VecNorm_Seq_driver.cvl  (VecNorm_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNorm_Seq.c  (VecNorm_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_Seq=VecNorm_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_Seq_driver.cvl VecNorm_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 10.4           transitions  : 93908 
   memory (bytes)    : 3.791650816E9  trace steps  : 54712 
   max process count : 3              valid calls  : 564401
   states            : 54695          provers      : z3    
   states saved      : 81775          prover calls : 51    
   state matches     : 18             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_Seq=VecNorm_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_Seq_driver.cvl VecNorm_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecNorm_Seq_driver: nprocs = 1, N = 3, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 3, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 3, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 3, normType = NORM_INFINITY ... ok  ok  ok  ok  ok  ok  ok  ok 
VecNorm_Seq_driver: nprocs = 1, N = 3, normType = NORM_1_AND_2 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 2, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 2, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 2, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 2, normType = NORM_INFINITY ... ok  ok  ok  ok 
VecNorm_Seq_driver: nprocs = 1, N = 2, normType = NORM_1_AND_2 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 1, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 1, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 1, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 1, N = 1, normType = NORM_INFINITY ... ok  ok 
VecNorm_Seq_driver: nprocs = 1, N = 1, normType = NORM_1_AND_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 3, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 3, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 3, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 3, normType = NORM_INFINITY ... ok  ok  ok  ok 
VecNorm_Seq_driver: nprocs = 2, N = 3, normType = NORM_1_AND_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 2, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 2, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 2, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 2, normType = NORM_INFINITY ... ok  ok 
VecNorm_Seq_driver: nprocs = 2, N = 2, normType = NORM_1_AND_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 1, normType = NORM_1 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 1, normType = NORM_2 ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 1, normType = NORM_FROBENIUS ... ok 
VecNorm_Seq_driver: nprocs = 2, N = 1, normType = NORM_INFINITY ... ok  ok 
VecNorm_Seq_driver: nprocs = 2, N = 1, normType = NORM_1_AND_2 ... ok 
=== Source files ===
VecNorm_Seq_driver.cvl  (VecNorm_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecNorm_Seq.c  (VecNorm_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecNorm_Seq=VecNorm_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecNorm_Seq_driver.cvl VecNorm_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 11.86          transitions  : 104131
   memory (bytes)    : 3.741319168E9  trace steps  : 60290 
   max process count : 3              valid calls  : 614279
   states            : 60273          provers      : z3    
   states saved      : 90519          prover calls : 69    
   state matches     : 18             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecNorm_Seq: PASS (took 23s)

========================================== Verifying [54/63] VecMaxPointwiseDivide_MPI ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide_MPI=VecMaxPointwiseDivide_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_MPI_driver.cvl VecMaxPointwiseDivide_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMaxPointwiseDivide_MPI_driver: nproc=1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecMaxPointwiseDivide_MPI_driver: nproc=1, N = 2 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_MPI_driver: nproc=1, N = 1 ... ok  ok 
VecMaxPointwiseDivide_MPI_driver: nproc=2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecMaxPointwiseDivide_MPI_driver: nproc=2, N = 2 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_MPI_driver: nproc=2, N = 1 ... ok  ok 
=== Source files ===
VecMaxPointwiseDivide_MPI_driver.cvl  (VecMaxPointwiseDivide_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMaxPointwiseDivide_MPI.c  (VecMaxPointwiseDivide_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide_MPI=VecMaxPointwiseDivide_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_MPI_driver.cvl VecMaxPointwiseDivide_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.53           transitions  : 34787 
   memory (bytes)    : 3.204448256E9  trace steps  : 19333 
   max process count : 3              valid calls  : 198983
   states            : 19334          provers      : z3    
   states saved      : 30027          prover calls : 55    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide_MPI=VecMaxPointwiseDivide_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_MPI_driver.cvl VecMaxPointwiseDivide_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMaxPointwiseDivide_MPI_driver: nproc=1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecMaxPointwiseDivide_MPI_driver: nproc=1, N = 2 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_MPI_driver: nproc=1, N = 1 ... ok  ok 
VecMaxPointwiseDivide_MPI_driver: nproc=2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok 
VecMaxPointwiseDivide_MPI_driver: nproc=2, N = 2 ... ok  ok  ok  ok 
VecMaxPointwiseDivide_MPI_driver: nproc=2, N = 1 ... ok  ok 
=== Source files ===
VecMaxPointwiseDivide_MPI_driver.cvl  (VecMaxPointwiseDivide_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMaxPointwiseDivide_MPI.c  (VecMaxPointwiseDivide_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMaxPointwiseDivide_MPI=VecMaxPointwiseDivide_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecMaxPointwiseDivide_MPI_driver.cvl VecMaxPointwiseDivide_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 8.52           transitions  : 38083 
   memory (bytes)    : 3.154116608E9  trace steps  : 20807 
   max process count : 3              valid calls  : 219853
   states            : 20808          provers      : z3    
   states saved      : 32364          prover calls : 102   
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMaxPointwiseDivide_MPI: PASS (took 15s)

========================================== Verifying [55/63] VecPointwiseMaxAbs_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMaxAbs_Seq=VecPointwiseMaxAbs_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMaxAbs_Seq_driver.cvl VecPointwiseMaxAbs_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMaxAbs_Seq_driver: nproc = 1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_Seq_driver: nproc = 1, N = 2 ... ok  ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_Seq_driver: nproc = 1, N = 1 ... ok  ok  ok 
VecPointwiseMaxAbs_Seq_driver: nproc = 2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_Seq_driver: nproc = 2, N = 2 ... ok  ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_Seq_driver: nproc = 2, N = 1 ... ok  ok  ok 
=== Source files ===
VecPointwiseMaxAbs_Seq_driver.cvl  (VecPointwiseMaxAbs_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMaxAbs_Seq.c  (VecPointwiseMaxAbs_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMaxAbs_Seq=VecPointwiseMaxAbs_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMaxAbs_Seq_driver.cvl VecPointwiseMaxAbs_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 16.9          transitions  : 106552
   memory (bytes)    : 3.52321536E9  trace steps  : 63182 
   max process count : 3             valid calls  : 652646
   states            : 63183         provers      : z3    
   states saved      : 97092         prover calls : 188   
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMaxAbs_Seq=VecPointwiseMaxAbs_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMaxAbs_Seq_driver.cvl VecPointwiseMaxAbs_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMaxAbs_Seq_driver: nproc = 1, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_Seq_driver: nproc = 1, N = 2 ... ok  ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_Seq_driver: nproc = 1, N = 1 ... ok  ok  ok 
VecPointwiseMaxAbs_Seq_driver: nproc = 2, N = 3 ... ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok 18s: mem=3024Mb trans=57312 traceSteps=33493 explored=33494 saved=51276 prove=370
 ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_Seq_driver: nproc = 2, N = 2 ... ok  ok  ok  ok  ok  ok  ok  ok  ok 
VecPointwiseMaxAbs_Seq_driver: nproc = 2, N = 1 ... ok  ok  ok 
=== Source files ===
VecPointwiseMaxAbs_Seq_driver.cvl  (VecPointwiseMaxAbs_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMaxAbs_Seq.c  (VecPointwiseMaxAbs_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMaxAbs_Seq=VecPointwiseMaxAbs_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMaxAbs_Seq_driver.cvl VecPointwiseMaxAbs_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 28.27          transitions  : 136762
   memory (bytes)    : 3.170893824E9  trace steps  : 81026 
   max process count : 3              valid calls  : 851224
   states            : 81027          provers      : z3    
   states saved      : 124285         prover calls : 428   
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecPointwiseMaxAbs_Seq: PASS (took 46s)

========================================== Verifying [56/63] VecDotRealPart ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecDotRealPart=VecDotRealPart_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDotRealPart_driver.cvl VecDotRealPart.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev
VecDotRealPart_driver: nprocs = 1, N = 3 ...
 ok VecDotRealPart_driver: nprocs = 1, N = 2 ...
 ok VecDotRealPart_driver: nprocs = 1, N = 1 ...
 ok VecDotRealPart_driver: nprocs = 2, N = 3 ...
 ok VecDotRealPart_driver: nprocs = 2, N = 2 ...
 ok VecDotRealPart_driver: nprocs = 2, N = 1 ...
 ok 
=== Source files ===
VecDotRealPart_driver.cvl  (VecDotRealPart_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecDotRealPart.c  (VecDotRealPart.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecDotRealPart=VecDotRealPart_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDotRealPart_driver.cvl VecDotRealPart.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.23           transitions  : 25288 
   memory (bytes)    : 3.674210304E9  trace steps  : 14763 
   max process count : 3              valid calls  : 156991
   states            : 14764          provers      : z3    
   states saved      : 22079          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecDotRealPart=VecDotRealPart_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDotRealPart_driver.cvl VecDotRealPart.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev
VecDotRealPart_driver: nprocs = 1, N = 3 ...
 ok VecDotRealPart_driver: nprocs = 1, N = 2 ...
 ok VecDotRealPart_driver: nprocs = 1, N = 1 ...
 ok VecDotRealPart_driver: nprocs = 2, N = 3 ...
 ok VecDotRealPart_driver: nprocs = 2, N = 2 ...
 ok VecDotRealPart_driver: nprocs = 2, N = 1 ...
 ok 
=== Source files ===
VecDotRealPart_driver.cvl  (VecDotRealPart_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecDotRealPart.c  (VecDotRealPart.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecDotRealPart=VecDotRealPart_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecDotRealPart_driver.cvl VecDotRealPart.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 6.03           transitions  : 32294 
   memory (bytes)    : 3.892314112E9  trace steps  : 18693 
   max process count : 3              valid calls  : 198418
   states            : 18694          provers      : z3    
   states saved      : 28153          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecDotRealPart: PASS (took 12s)

========================================== Verifying [57/63] VecMax_MPI ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMax_MPI=VecMax_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_MPI_driver.cvl VecMax_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMax_MPI_driver: nprocs = 1, N = 3 ... ok  ok  ok  ok 
VecMax_MPI_driver: nprocs = 1, N = 2 ... ok  ok 
VecMax_MPI_driver: nprocs = 1, N = 1 ... ok 
VecMax_MPI_driver: nprocs = 1, N = 0 ... ok 
VecMax_MPI_driver: nprocs = 2, N = 3 ... ok  ok  ok  ok 
VecMax_MPI_driver: nprocs = 2, N = 2 ... ok  ok 
VecMax_MPI_driver: nprocs = 2, N = 1 ... ok 
VecMax_MPI_driver: nprocs = 2, N = 0 ... ok 
=== Source files ===
VecMax_MPI_driver.cvl  (VecMax_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMax_MPI.c  (VecMax_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMax_MPI=VecMax_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_MPI_driver.cvl VecMax_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.44          transitions  : 28252 
   memory (bytes)    : 3.60710144E9  trace steps  : 15433 
   max process count : 3             valid calls  : 157086
   states            : 15434         provers      : z3    
   states saved      : 23675         prover calls : 39    
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMax_MPI=VecMax_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_MPI_driver.cvl VecMax_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMax_MPI_driver: nprocs = 1, N = 3 ... ok  ok  ok  ok 
VecMax_MPI_driver: nprocs = 1, N = 2 ... ok  ok 
VecMax_MPI_driver: nprocs = 1, N = 1 ... ok 
VecMax_MPI_driver: nprocs = 1, N = 0 ... ok 
VecMax_MPI_driver: nprocs = 2, N = 3 ... ok  ok  ok  ok 
VecMax_MPI_driver: nprocs = 2, N = 2 ... ok  ok 
VecMax_MPI_driver: nprocs = 2, N = 1 ... ok 
VecMax_MPI_driver: nprocs = 2, N = 0 ... ok 
=== Source files ===
VecMax_MPI_driver.cvl  (VecMax_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMax_MPI.c  (VecMax_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMax_MPI=VecMax_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_MPI_driver.cvl VecMax_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 5.82          transitions  : 30575 
   memory (bytes)    : 3.85875968E9  trace steps  : 16815 
   max process count : 3             valid calls  : 172272
   states            : 16816         provers      : z3    
   states saved      : 25781         prover calls : 39    
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMax_MPI: PASS (took 11s)

========================================== Verifying [58/63] VecSwap ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecSwap=VecSwap_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecSwap_driver.cvl VecSwap.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecSwap_driver: nprocs = 1, N = 3 ... ok 
VecSwap_driver: nprocs = 1, N = 2 ... ok 
VecSwap_driver: nprocs = 1, N = 1 ... ok 
VecSwap_driver: nprocs = 2, N = 3 ... ok 
VecSwap_driver: nprocs = 2, N = 2 ... ok 
VecSwap_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecSwap_driver.cvl  (VecSwap_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecSwap.c  (VecSwap.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecSwap=VecSwap_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecSwap_driver.cvl VecSwap.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.87           transitions  : 40323 
   memory (bytes)    : 3.590324224E9  trace steps  : 24557 
   max process count : 3              valid calls  : 264259
   states            : 24558          provers      : z3    
   states saved      : 36301          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecSwap=VecSwap_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecSwap_driver.cvl VecSwap.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecSwap_driver: nprocs = 1, N = 3 ... ok 
VecSwap_driver: nprocs = 1, N = 2 ... ok 
VecSwap_driver: nprocs = 1, N = 1 ... ok 
VecSwap_driver: nprocs = 2, N = 3 ... ok 
VecSwap_driver: nprocs = 2, N = 2 ... ok 
VecSwap_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecSwap_driver.cvl  (VecSwap_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecSwap.c  (VecSwap.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecSwap=VecSwap_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecSwap_driver.cvl VecSwap.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.96           transitions  : 47391 
   memory (bytes)    : 3.724541952E9  trace steps  : 28735 
   max process count : 3              valid calls  : 309851
   states            : 28736          provers      : z3    
   states saved      : 42680          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecSwap: PASS (took 15s)

========================================== Verifying [59/63] VecSwap_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecSwap_Seq=VecSwap_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecSwap_Seq_driver.cvl VecSwap_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecSwap_Seq_driver: nprocs = 1, N = 3 ... ok 
VecSwap_Seq_driver: nprocs = 1, N = 2 ... ok 
VecSwap_Seq_driver: nprocs = 1, N = 1 ... ok 
VecSwap_Seq_driver: nprocs = 2, N = 3 ... ok 
VecSwap_Seq_driver: nprocs = 2, N = 2 ... ok 
VecSwap_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecSwap_Seq_driver.cvl  (VecSwap_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecSwap_Seq.c  (VecSwap_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecSwap_Seq=VecSwap_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecSwap_Seq_driver.cvl VecSwap_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.74           transitions  : 39387 
   memory (bytes)    : 3.674210304E9  trace steps  : 23630 
   max process count : 3              valid calls  : 253363
   states            : 23631          provers      : z3    
   states saved      : 35065          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecSwap_Seq=VecSwap_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecSwap_Seq_driver.cvl VecSwap_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecSwap_Seq_driver: nprocs = 1, N = 3 ... ok 
VecSwap_Seq_driver: nprocs = 1, N = 2 ... ok 
VecSwap_Seq_driver: nprocs = 1, N = 1 ... ok 
VecSwap_Seq_driver: nprocs = 2, N = 3 ... ok 
VecSwap_Seq_driver: nprocs = 2, N = 2 ... ok 
VecSwap_Seq_driver: nprocs = 2, N = 1 ... ok 
=== Source files ===
VecSwap_Seq_driver.cvl  (VecSwap_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecSwap_Seq.c  (VecSwap_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecSwap_Seq=VecSwap_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecSwap_Seq_driver.cvl VecSwap_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.68           transitions  : 46455 
   memory (bytes)    : 3.825205248E9  trace steps  : 27808 
   max process count : 3              valid calls  : 298931
   states            : 27809          provers      : z3    
   states saved      : 41444          prover calls : 12    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecSwap_Seq: PASS (took 15s)

========================================== Verifying [60/63] VecScale ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecScale=VecScale_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecScale_driver.cvl VecScale.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecDot_driver: nprocs = 1, N = 3, Alpha = X_alpha_Real ... ok  ok 
VecDot_driver: nprocs = 1, N = 2, Alpha = X_alpha_Real ... ok  ok 
VecDot_driver: nprocs = 1, N = 1, Alpha = X_alpha_Real ... ok  ok 
VecDot_driver: nprocs = 2, N = 3, Alpha = X_alpha_Real ... ok  ok 
VecDot_driver: nprocs = 2, N = 2, Alpha = X_alpha_Real ... ok  ok 
VecDot_driver: nprocs = 2, N = 1, Alpha = X_alpha_Real ... ok  ok 
=== Source files ===
VecScale_driver.cvl  (VecScale_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecScale.c  (VecScale.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecScale=VecScale_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecScale_driver.cvl VecScale.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.34           transitions  : 26787 
   memory (bytes)    : 3.758096384E9  trace steps  : 15810 
   max process count : 3              valid calls  : 169416
   states            : 15811          provers      : z3    
   states saved      : 23707          prover calls : 15    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecScale=VecScale_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecScale_driver.cvl VecScale.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecDot_driver: nprocs = 1, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecDot_driver: nprocs = 1, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecDot_driver: nprocs = 1, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecDot_driver: nprocs = 2, N = 3, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecDot_driver: nprocs = 2, N = 2, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
VecDot_driver: nprocs = 2, N = 1, Alpha = {.real=X_alpha_Real, .imag=X_alpha_Imag} ... ok  ok 
=== Source files ===
VecScale_driver.cvl  (VecScale_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecScale.c  (VecScale.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecScale=VecScale_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecScale_driver.cvl VecScale.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 6.27           transitions  : 32696 
   memory (bytes)    : 3.707764736E9  trace steps  : 19233 
   max process count : 3              valid calls  : 207780
   states            : 19234          provers      : z3    
   states saved      : 28965          prover calls : 20    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecScale: PASS (took 12s)

========================================== Verifying [61/63] VecPointwiseMax_Seq ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMax_Seq=VecPointwiseMax_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMax_Seq_driver.cvl VecPointwiseMax_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMax_Seq_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMax_Seq_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMax_Seq_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMax_Seq_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMax_Seq_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMax_Seq_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMax_Seq_driver.cvl  (VecPointwiseMax_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMax_Seq.c  (VecPointwiseMax_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMax_Seq=VecPointwiseMax_Seq_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMax_Seq_driver.cvl VecPointwiseMax_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 6.42          transitions  : 35052 
   memory (bytes)    : 3.69098752E9  trace steps  : 21076 
   max process count : 3             valid calls  : 227013
   states            : 21077         provers      : z3    
   states saved      : 31150         prover calls : 12    
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMax_Seq=VecPointwiseMax_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMax_Seq_driver.cvl VecPointwiseMax_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecPointwiseMax_Seq_driver: nproc = 1, N = 3 ... ok 
VecPointwiseMax_Seq_driver: nproc = 1, N = 2 ... ok 
VecPointwiseMax_Seq_driver: nproc = 1, N = 1 ... ok 
VecPointwiseMax_Seq_driver: nproc = 2, N = 3 ... ok 
VecPointwiseMax_Seq_driver: nproc = 2, N = 2 ... ok 
VecPointwiseMax_Seq_driver: nproc = 2, N = 1 ... ok 
=== Source files ===
VecPointwiseMax_Seq_driver.cvl  (VecPointwiseMax_Seq_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecPointwiseMax_Seq.c  (VecPointwiseMax_Seq.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecPointwiseMax_Seq=VecPointwiseMax_Seq_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 VecPointwiseMax_Seq_driver.cvl VecPointwiseMax_Seq.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 7.27           transitions  : 40752 
   memory (bytes)    : 3.623878656E9  trace steps  : 24214 
   max process count : 3              valid calls  : 261169
   states            : 24215          provers      : z3    
   states saved      : 35985          prover calls : 24    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecPointwiseMax_Seq: PASS (took 14s)

========================================== Verifying [62/63] VecMax ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMax=VecMax_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_driver.cvl VecMax.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMax_driver: nprocs = 1, N = 3 ... ok  ok  ok  ok 
VecMax_driver: nprocs = 1, N = 2 ... ok  ok 
VecMax_driver: nprocs = 1, N = 1 ... ok 
VecMax_driver: nprocs = 1, N = 0 ... ok 
VecMax_driver: nprocs = 2, N = 3 ... ok  ok  ok  ok 
VecMax_driver: nprocs = 2, N = 2 ... ok  ok 
VecMax_driver: nprocs = 2, N = 1 ... ok 
VecMax_driver: nprocs = 2, N = 0 ... ok 
=== Source files ===
VecMax_driver.cvl  (VecMax_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMax.c  (VecMax.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMax=VecMax_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_driver.cvl VecMax.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 5.52          transitions  : 28792 
   memory (bytes)    : 3.85875968E9  trace steps  : 16004 
   max process count : 3             valid calls  : 163260
   states            : 16005         provers      : z3    
   states saved      : 24258         prover calls : 29    
   state matches     : 0             

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMax=VecMax_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_driver.cvl VecMax.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMax_driver: nprocs = 1, N = 3 ... ok  ok  ok  ok 
VecMax_driver: nprocs = 1, N = 2 ... ok  ok 
VecMax_driver: nprocs = 1, N = 1 ... ok 
VecMax_driver: nprocs = 1, N = 0 ... ok 
VecMax_driver: nprocs = 2, N = 3 ... ok  ok  ok  ok 
VecMax_driver: nprocs = 2, N = 2 ... ok  ok 
VecMax_driver: nprocs = 2, N = 1 ... ok 
VecMax_driver: nprocs = 2, N = 0 ... ok 
=== Source files ===
VecMax_driver.cvl  (VecMax_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMax.c  (VecMax.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMax=VecMax_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=0 -inputN_MAX=3 VecMax_driver.cvl VecMax.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 6.15           transitions  : 33444 
   memory (bytes)    : 3.724541952E9  trace steps  : 18842 
   max process count : 3              valid calls  : 193858
   states            : 18843          provers      : z3    
   states saved      : 28573          prover calls : 29    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMax: PASS (took 12s)

========================================== Verifying [63/63] VecMDot_MPI ======================================
civl verify -checkTermination -sysIncludePath=../../include -DVecMDot_MPI=VecMDot_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_MPI_driver.cvl VecMDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMDot_MPI_driver.cvl  (VecMDot_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMDot_MPI.c  (VecMDot_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMDot_MPI=VecMDot_MPI_spec -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_MPI_driver.cvl VecMDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl 

=== Stats ===
   time (s)          : 12.72          transitions  : 107806
   memory (bytes)    : 3.674210304E9  trace steps  : 64015 
   max process count : 3              valid calls  : 686736
   states            : 64016          provers      : z3    
   states saved      : 95348          prover calls : 21    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

civl verify -checkTermination -sysIncludePath=../../include -DVecMDot_MPI=VecMDot_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX  -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_MPI_driver.cvl VecMDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 
CIVL v1.22.r5959 of 2025-03-17 -- https://civl.dev

VecMDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=1, N = 1, Number of y[nv] vectors = 0 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 3, Number of y[nv] vectors = 0 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 2, Number of y[nv] vectors = 0 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 3 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 2 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 1 ... ok 
VecMDot_MPI_driver: nprocs=2, N = 1, Number of y[nv] vectors = 0 ... ok 
=== Source files ===
VecMDot_MPI_driver.cvl  (VecMDot_MPI_driver.cvl)
petscvec.h  (../../include/petscvec.h)
civlcomplex.cvh  (../../include/civlcomplex.cvh)
civlvec.cvh  (../../include/civlvec.cvh)
scalars.cvh  (../../include/scalars.cvh)
VecMDot_MPI.c  (VecMDot_MPI.c)
petscvec.cvl  (../../src/petscvec.cvl)
civlvec.cvl  (../../src/civlvec.cvl)
civlcomplex.cvl  (../../src/civlcomplex.cvl)

=== Command ===
civl verify -checkTermination -sysIncludePath=../../include -DVecMDot_MPI=VecMDot_MPI_spec -DCIVL_COMPLEX -DUSE_COMPLEX -input_mpi_nprocs_lo=1 -input_mpi_nprocs_hi=2 -inputN_MIN=1 -inputN_MAX=3 -inputNV_MAX=3 VecMDot_MPI_driver.cvl VecMDot_MPI.c ../../src/petscvec.cvl ../../src/civlvec.cvl ../../src/civlcomplex.cvl 

=== Stats ===
   time (s)          : 15.87          transitions  : 137047
   memory (bytes)    : 3.724541952E9  trace steps  : 79659 
   max process count : 3              valid calls  : 854965
   states            : 79660          provers      : z3    
   states saved      : 119853         prover calls : 21    
   state matches     : 0              

=== Result ===
All errors marked with '+' are absent on all executions.
 + Dereference errors                  + Functional equivalence violations
 + Internal errors                     + Library loading errors
 + Other errors                        + Assertion violations
 + Communication errors                + Writes to constant variables
 + Absolute deadlocks                  + Division by zero
 + Writes to $input variables          + Invalid casts
 + Malloc errors                       + Memory leaks
 + Memory management errors            + MPI usage errors
 + Out of bounds errors                + Reads from $output variables
 + Pointer errors                      + Process leaks
 + Sequence errors                     + Non-termination
 + Use of undefined values             + Union errors

VecMDot_MPI: PASS (took 29s)

============================================================================================================================
Final Summary:
Total Time Taken: 1069 second(s)
Total Number of targets: 63
Number of targets Passed: 61
Number of targets Failed: 2

Individual Function Stats:
  -------------------- ---------------------- -------
        Function             Time Taken       Result
  -------------------- ---------------------- -------
  VecAXPBY             : 14         second(s) [PASS]
  VecAXPBY_Seq         : 19         second(s) [PASS]
  VecAXPBYPCZ          : 17         second(s) [PASS]
  VecAXPBYPCZ_Seq      : 19         second(s) [PASS]
  VecAXPY              : 17         second(s) [PASS]
  VecAXPY_Seq          : 14         second(s) [PASS]
  VecAYPX              : 13         second(s) [PASS]
  VecAYPX_Seq          : 18         second(s) [PASS]
  VecConjugate_Seq     : 10         second(s) [PASS]
  VecCopy              : 12         second(s) [PASS]
  VecCopy_Seq          : 12         second(s) [PASS]
  VecDot               : 11         second(s) [PASS]
  VecDot_MPI           : 11         second(s) [PASS]
  VecDot_Seq           : 10         second(s) [PASS]
  VecDotRealPart       : 12         second(s) [PASS]
  VecGetSize           : 8          second(s) [PASS]
  VecGetSize_MPI       : 8          second(s) [PASS]
  VecGetSize_Seq       : 6          second(s) [PASS]
  VecGetValues         : 11         second(s) [PASS]
  VecMax               : 12         second(s) [PASS]
  VecMax_MPI           : 11         second(s) [PASS]
  VecMax_Seq           : 9          second(s) [PASS]
  VecMAXPBY            : 44         second(s) [PASS]
  VecMaxPointwiseDivide : 16         second(s) [PASS]
  VecMaxPointwiseDivide_MPI : 15         second(s) [PASS]
  VecMaxPointwiseDivide_orig : 8          second(s) [FAIL]
  VecMaxPointwiseDivide_Seq : 13         second(s) [PASS]
  VecMAXPY             : 37         second(s) [PASS]
  VecMAXPY_Seq         : 29         second(s) [PASS]
  VecMDot              : 35         second(s) [PASS]
  VecMDot_MPI          : 29         second(s) [PASS]
  VecMDot_Seq          : 23         second(s) [PASS]
  VecMin               : 11         second(s) [PASS]
  VecMin_MPI           : 13         second(s) [PASS]
  VecMin_Seq           : 7          second(s) [PASS]
  VecMTDot             : 35         second(s) [PASS]
  VecMTDot_MPI         : 29         second(s) [PASS]
  VecMTDot_Seq         : 23         second(s) [PASS]
  VecNorm              : 17         second(s) [PASS]
  VecNorm_MPI          : 15         second(s) [PASS]
  VecNorm_MPI_orig     : 9          second(s) [FAIL]
  VecNorm_Seq          : 23         second(s) [PASS]
  VecNormalize         : 12         second(s) [PASS]
  VecNormAvailable     : 17         second(s) [PASS]
  VecPointwiseDivide   : 21         second(s) [PASS]
  VecPointwiseDivide_Seq : 21         second(s) [PASS]
  VecPointwiseMax      : 14         second(s) [PASS]
  VecPointwiseMax_Seq  : 14         second(s) [PASS]
  VecPointwiseMaxAbs   : 23         second(s) [PASS]
  VecPointwiseMaxAbs_Seq : 46         second(s) [PASS]
  VecPointwiseMin      : 14         second(s) [PASS]
  VecPointwiseMin_Seq  : 15         second(s) [PASS]
  VecPointwiseMult     : 14         second(s) [PASS]
  VecPointwiseMult_Seq : 14         second(s) [PASS]
  VecScale             : 12         second(s) [PASS]
  VecScale_Seq         : 15         second(s) [PASS]
  VecSwap              : 15         second(s) [PASS]
  VecSwap_Seq          : 15         second(s) [PASS]
  VecTDot              : 11         second(s) [PASS]
  VecTDot_MPI          : 11         second(s) [PASS]
  VecTDot_Seq          : 9          second(s) [PASS]
  VecWAXPY             : 24         second(s) [PASS]
  VecWAXPY_Seq         : 24         second(s) [PASS]
============================================================================================================================
