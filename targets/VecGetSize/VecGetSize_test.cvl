#include "petscvec.h"
#include <mpi.h>
#include <stdio.h>

$input int N_MIN, N_MAX, n;
$assume(N_MIN <= n && n <= N_MAX);

int main() {
  MPI_Init(NULL, NULL);
  MPI_Comm comm = MPI_COMM_WORLD;
  int rank, actual_size, nprocs, value = 5;
  MPI_Comm_rank(comm, &rank);
  MPI_Comm_size(comm, &nprocs);
  $vec x = $vec_zero(n);
  STYPE x_values[n];
  if (rank == 0) {
    for (int i = 0; i < n; i++)
      x_values[i] = scalar_of(value);
    x = $vec_make_from_dense(n, x_values);
    $print("\nVecGetSize_test: nproc = ", nprocs, ", N = ", n, " ...");
    $print("\nx: ");
    $vec_print(x);
  }
  Vec p_x = CIVL_CivlToPetscVec(x, PETSC_DECIDE, comm);
  PetscErrorCode err_actual = VecGetSize(p_x, &actual_size);
  $assert(err_actual == 0);
  if (rank == 0)
    $print("Expected_size = ", n, "\nActual_size   = ", actual_size, "\n");
  $assert(actual_size == n);
  VecDestroy(&p_x);
  MPI_Finalize();
}
