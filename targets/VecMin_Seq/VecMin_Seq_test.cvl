#include "petscvec.h"
#undef VecMin_Seq
PetscErrorCode VecMin_Seq(Vec xin, PetscInt *idx, PetscReal *z);

$input int n = 4;

int main() {
  MPI_Init(NULL, NULL);
  MPI_Comm comm = MPI_COMM_WORLD;
  int rank, p_actual, p_expected;
  MPI_Comm_rank(comm, &rank);
  $vec x = $vec_zero(0);

  STYPE x_values[n];
  CIVL_RTYPE actual, expected;

  if (rank == 0) {
    for (int i = 0; i < n; i++)
      x_values[i] = scalar_make((double)(n - i), 0.0);

    x = $vec_make_from_dense(n, x_values);

    $print("Vector x:\n");
    $vec_print(x);
  }

  Vec p_x = CIVL_CivlToPetscVec(x, PETSC_DECIDE, comm);
  PetscErrorCode err_actual = VecMin_Seq(p_x, &p_actual, &actual);
  VecMin_Seq_spec(p_x, &p_expected, &expected);

  $assert(err_actual == 0);
  if (rank == 0) {
    $pathCondition();
    $print("\nActual Vec Min   = ", actual, " at index ", p_actual, "\n",
           "Expected Vec Min = ", expected, " at index ", p_expected, "\n\n");
  }
  $assert(p_actual == p_expected);
  $assert(actual == expected);

  VecDestroy(&p_x);
  MPI_Finalize();
  return 0;
}
